
==================== FINAL INTERFACE ====================
2017-01-25 13:37:16.031893 UTC

interface use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9:UseHaskellAPIClient 8001
  interface hash: e873d35e11a8597fa3ae4719690cce1d
  ABI hash: 21a496fc06f6312ade21cf412796d2f3
  export-list hash: 0d91ad6cb5a92ed79acdd5d226201906
  orphan hash: b7a6cd08d7ed8262a3704ccd70ded034
  flag hash: c0019f874b7b051e01cc1d441922ac04
  sig of: Nothing
  used TH splices: False
  where
exports:
  UseHaskellAPIClient.fileTypeTwo
  UseHaskellAPIClient.fileUpdate
  UseHaskellAPIClient.getREADME
  UseHaskellAPIClient.loadEnvVars
  UseHaskellAPIClient.performRestCall
  UseHaskellAPIClient.restAPI
  UseHaskellAPIClient.searchFiles
  UseHaskellAPIClient.searchMessage
  UseHaskellAPIClient.storeMessage
  UseHaskellAPIClient.uploadFile
module dependencies: UseHaskellAPI
package dependencies: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.2@blaze-html-0.8.1.2-2kD96kJB6JEGow1dP8IL6C
                      blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-5a5pBG0fO8kJX4ke3K7j3D
                      bson-0.3.2.3@bson-0.3.2.3-3QA3aP5EtCyCltXUzEKOsQ
                      bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-2a2c54yIyBn79Ul3iLWclJ
                      cryptohash-0.11.9@cryptohash-0.11.9-9KNu0EEbreBFrmNJAeHgYz
                      cryptonite-0.19@cryptonite-0.19-G9PYO4oOEqhDTta2u9rAaU
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      http-api-data-0.3.2@http-api-data-0.3.2-9RGKpfYtINZ17YsGZel6a3
                      http-client-0.4.31.1@http-client-0.4.31.1-FGf7eP2gsutEVI3BLIDKxS
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-media-0.6.4@http-media-0.6.4-82jDVCpdN5H696EFF5l5I4
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      integer-gmp-1.0.0.1 memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      safe-0.3.10@safe-0.3.10-1VyrsjWhmjvGnGud5lgW7f
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY
                      servant-client-0.9.1.1@servant-client-0.9.1.1-2qgn4HLUhDF108ixpaTeg8
                      servant-server-0.9.1.1@servant-server-0.9.1.1-FKQvXJjQ1586gh3lj2fX3G
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      streaming-commons-0.1.16@streaming-commons-0.1.16-KtRawhq8O97EWCabefpk66
                      string-conversions-0.4@string-conversions-0.4-8T0UFmRDEly2gsNJzmHrNQ
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0 unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.2.0@unix-compat-0.4.2.0-GNHotEMWE5dJ4oYFhgibIV
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      uri-bytestring-0.2.2.0@uri-bytestring-0.2.2.0-HlVoBJYzvCi57p7OpVBB6a
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-6csRgbgolyoCCOLw42RlBs
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0:Data.Bson.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         http-client-0.4.31.1@http-client-0.4.31.1-FGf7eP2gsutEVI3BLIDKxS:Network.HTTP.Client.Request
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9:UseHaskellAPI
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0:Data.Bson.Generic
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         http-api-data-0.3.2@http-api-data-0.3.2-9RGKpfYtINZ17YsGZel6a3:Web.Internal.FormUrlEncoded
                         http-client-0.4.31.1@http-client-0.4.31.1-FGf7eP2gsutEVI3BLIDKxS:Network.HTTP.Client
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.ContentTypes
                         servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.IsSecure
                         servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.Verbs
                         servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.Utils.Links
                         servant-client-0.9.1.1@servant-client-0.9.1.1-2qgn4HLUhDF108ixpaTeg8:Servant.Client
                         servant-client-0.9.1.1@servant-client-0.9.1.1-2qgn4HLUhDF108ixpaTeg8:Servant.Common.BaseUrl
                         servant-client-0.9.1.1@servant-client-0.9.1.1-2qgn4HLUhDF108ixpaTeg8:Servant.Common.Req
                         servant-server-0.9.1.1@servant-server-0.9.1.1-FKQvXJjQ1586gh3lj2fX3G:Servant.Server.Internal
                         servant-server-0.9.1.1@servant-server-0.9.1.1-FKQvXJjQ1586gh3lj2fX3G:Servant.Server.Internal.BasicAuth
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         uri-bytestring-0.2.2.0@uri-bytestring-0.2.2.0-HlVoBJYzvCi57p7OpVBB6a:URI.ByteString.Types
                         use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9:UseHaskellAPI
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  base-4.9.0.0:Data.Proxy aa86c72628cf3b1ceb0816ca84687d80
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API 99afe126fdaa945ad67748b598d522eb
import  -/  servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.Alternative a8f3f7a60f7890ff9e0a1e9385ffa181
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-2qgn4HLUhDF108ixpaTeg8:Servant.Client 8b7ae71607f6884bbd925274a2a97ffe
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-2qgn4HLUhDF108ixpaTeg8:Servant.Common.Req ac79c9e42e8ab6edbf3cb34d80d7e914
import  -/  UseHaskellAPI 06a397fe76c17ac361a9c0edb6318df0
  exports: 16a0002797fea90432ec08b6464c6255
  API 12a7a480542c5c4c427446e669838f1d
  FileTime 8929dba5181508e68500706baa66db0a
  Message 4c1d25dbbebd49a40cf325aba716ef02
  ResponseData 93cc54404beb4e0e5c49acc2b2f03d3e
  UserFile 203cae548ea585a44186038e6962eb5b
  UserRequest 13ff60b3b126b88a5233eb938acc75d9
4b0da54e37d9c490d6ebf50b0871697a
  $s$fMimeUnrenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON [UseHaskellAPI.UserFile]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [UseHaskellAPI.UserFile]
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ [UseHaskellAPI.UserFile]
                     UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$dFromJSON)
                  UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender -}
89fdca5e802813ae7647e12c5a701cf2
  $s$fMimeUnrenderTYPEJSONa1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [UseHaskellAPI.UserFile]
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.Instances.withArray
                   @ [UseHaskellAPI.UserFile]
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa4
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa2
                     `cast`
                   (<Data.Vector.Vector Data.Aeson.Types.Internal.Value>_R
                    ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                  <[UseHaskellAPI.UserFile]>_R))) -}
99f4ce5cd995733d7e665a26b5046437
  $s$fMimeUnrenderTYPEJSONa10 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON UseHaskellAPI.ResponseData
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ UseHaskellAPI.ResponseData
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ UseHaskellAPI.ResponseData
                     UseHaskellAPI.$fFromJSONResponseData_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                               <UseHaskellAPI.ResponseData>_N)))
                  UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender3 -}
1690a8cdad8f37eee2515ff88a0c3c03
  $s$fMimeUnrenderTYPEJSONa2 ::
    Data.Vector.Vector Data.Aeson.Types.Internal.Value
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [UseHaskellAPI.UserFile] f r
       -> f r
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: (\ (x :: Data.Vector.Vector
                           Data.Aeson.Types.Internal.Value) ->
                 UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa3
                   (GHC.List.zipWith
                      @ GHC.Types.Int
                      @ Data.Aeson.Types.Internal.Value
                      @ (Data.Aeson.Types.Internal.Parser UseHaskellAPI.UserFile)
                      UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_f1
                      UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_f2
                      (case x of v2 { Data.Vector.Vector ipv ipv1 ipv2 ->
                       letrec {
                         $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                           {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                         = \ (ww :: GHC.Prim.Int#) ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# ww ipv1) of wild {
                             GHC.Types.False
                             -> case GHC.Prim.indexArray#
                                       @ Data.Aeson.Types.Internal.Value
                                       ipv2
                                       (GHC.Prim.+# ipv ww) of ds2 { Unit# ipv3 ->
                                GHC.Types.:
                                  @ Data.Aeson.Types.Internal.Value
                                  ipv3
                                  ($wgo (GHC.Prim.+# ww 1#)) }
                             GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                       } in
                       $wgo 0# }))) -}
6919d0a14fea8e26c5e8cf2ba14d583d
  $s$fMimeUnrenderTYPEJSONa3 ::
    [Data.Aeson.Types.Internal.Parser UseHaskellAPI.UserFile]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [UseHaskellAPI.UserFile] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
52924744edac0b4deb44439fbbf18d0f
  $s$fMimeUnrenderTYPEJSONa4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
060f9090114be194169db30f9f0bf7c5
  $s$fMimeUnrenderTYPEJSONa5 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON [UseHaskellAPI.Message]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [UseHaskellAPI.Message]
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ [UseHaskellAPI.Message]
                     UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$dFromJSON1)
                  UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 -}
d23d24ef36bac416b1ca47d9b1506d4a
  $s$fMimeUnrenderTYPEJSONa6 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [UseHaskellAPI.Message]
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.Instances.withArray
                   @ [UseHaskellAPI.Message]
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa4
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa7
                     `cast`
                   (<Data.Vector.Vector Data.Aeson.Types.Internal.Value>_R
                    ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                  <[UseHaskellAPI.Message]>_R))) -}
489c55001aa10ba0addee558749f5ce4
  $s$fMimeUnrenderTYPEJSONa7 ::
    Data.Vector.Vector Data.Aeson.Types.Internal.Value
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [UseHaskellAPI.Message] f r
       -> f r
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: (\ (x :: Data.Vector.Vector
                           Data.Aeson.Types.Internal.Value) ->
                 UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa8
                   (GHC.List.zipWith
                      @ GHC.Types.Int
                      @ Data.Aeson.Types.Internal.Value
                      @ (Data.Aeson.Types.Internal.Parser UseHaskellAPI.Message)
                      UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_f4
                      UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_f2
                      (case x of v2 { Data.Vector.Vector ipv ipv1 ipv2 ->
                       letrec {
                         $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                           {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                         = \ (ww :: GHC.Prim.Int#) ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# ww ipv1) of wild {
                             GHC.Types.False
                             -> case GHC.Prim.indexArray#
                                       @ Data.Aeson.Types.Internal.Value
                                       ipv2
                                       (GHC.Prim.+# ipv ww) of ds2 { Unit# ipv3 ->
                                GHC.Types.:
                                  @ Data.Aeson.Types.Internal.Value
                                  ipv3
                                  ($wgo (GHC.Prim.+# ww 1#)) }
                             GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                       } in
                       $wgo 0# }))) -}
dc7555503643e909e28f977e22fea80b
  $s$fMimeUnrenderTYPEJSONa8 ::
    [Data.Aeson.Types.Internal.Parser UseHaskellAPI.Message]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [UseHaskellAPI.Message] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
41d7559989c930b527d3941b6e62c3de
  $s$fMimeUnrenderTYPEJSONa9 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON GHC.Types.Bool
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ GHC.Types.Bool
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ GHC.Types.Bool
                     Data.Aeson.Types.Instances.$fFromJSONBool_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <GHC.Types.Bool>_N)))
                  UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2 -}
b66530c8baa8cdbaafbdd8f9dfdb7857
  $s$fMimeUnrenderTYPEJSONa_$dFromJSON ::
    Data.Aeson.Types.Class.FromJSON [UseHaskellAPI.UserFile]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa1
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <[UseHaskellAPI.UserFile]>_N)) -}
c2f837b1278cc2766ef532b2ffe00c10
  $s$fMimeUnrenderTYPEJSONa_$dFromJSON1 ::
    Data.Aeson.Types.Class.FromJSON [UseHaskellAPI.Message]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa6
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <[UseHaskellAPI.Message]>_N)) -}
9e997613075bb948c7a31cfa2470d314
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String [UseHaskellAPI.UserFile]
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ [UseHaskellAPI.UserFile]
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$dFromJSON
                   eta) -}
4fff3799f38af5bfea08a82e909f877a
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String [UseHaskellAPI.Message]
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ [UseHaskellAPI.Message]
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$dFromJSON1
                   eta) -}
a71bb76c70afc551951ba35b0526e100
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Types.Bool
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ GHC.Types.Bool
                   Data.Aeson.Types.Instances.$fFromJSONBool_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <GHC.Types.Bool>_N))
                   eta) -}
3cd3d5501143b6c97f84c2c9eece1990
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender3 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String UseHaskellAPI.ResponseData
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ UseHaskellAPI.ResponseData
                   UseHaskellAPI.$fFromJSONResponseData_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                             <UseHaskellAPI.ResponseData>_N))
                   eta) -}
ad0148fb104a2f61b09898b56b221dde
  $s$fMimeUnrenderTYPEJSONa_f1 ::
    GHC.Types.Int
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser UseHaskellAPI.UserFile
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ (idx :: GHC.Types.Int)
                   (value :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   pathElem17 :: Data.Aeson.Types.Internal.JSONPathElement
                   = case idx of dt { GHC.Types.I# dt1 ->
                     Data.Aeson.Types.Internal.Index dt1 }
                 } in
                 let {
                   p :: Data.Aeson.Types.Internal.Parser UseHaskellAPI.UserFile
                   = UseHaskellAPI.$fFromJSONUserFile_$cparseJSON value
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             UseHaskellAPI.UserFile f1 r) ->
                  p `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <UseHaskellAPI.UserFile>_R)
                    @ f1
                    @ r
                    (GHC.Types.:
                       @ Data.Aeson.Types.Internal.JSONPathElement
                       pathElem17
                       path)
                    kf
                    ks)
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <UseHaskellAPI.UserFile>_R))) -}
d9944110b4249e74f38bcaf9542b0c71
  $s$fMimeUnrenderTYPEJSONa_f2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 9223372036854775807#) -}
86746e8dca125f8b894387a959918d8c
  $s$fMimeUnrenderTYPEJSONa_f4 ::
    GHC.Types.Int
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser UseHaskellAPI.Message
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ (idx :: GHC.Types.Int)
                   (value :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   pathElem17 :: Data.Aeson.Types.Internal.JSONPathElement
                   = case idx of dt { GHC.Types.I# dt1 ->
                     Data.Aeson.Types.Internal.Index dt1 }
                 } in
                 let {
                   p :: Data.Aeson.Types.Internal.Parser UseHaskellAPI.Message
                   = UseHaskellAPI.$fFromJSONMessage_$cparseJSON value
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             UseHaskellAPI.Message f1 r) ->
                  p `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <UseHaskellAPI.Message>_R)
                    @ f1
                    @ r
                    (GHC.Types.:
                       @ Data.Aeson.Types.Internal.JSONPathElement
                       pathElem17
                       path)
                    kf
                    ks)
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <UseHaskellAPI.Message>_R))) -}
6945fb7cce89b40573191a3101bc799d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   UseHaskellAPIClient.$trModule2
                   UseHaskellAPIClient.$trModule1) -}
48e4f614f4367aec34023307a46f595b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "UseHaskellAPIClient"#) -}
ebd7e1261e1d7923ead223d2226cff6c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9"#) -}
3e7a32666492f6488e3d0fa5d7b11966
  fileTypeTwo ::
    UseHaskellAPI.UserRequest
    -> Servant.Common.Req.ClientM GHC.Types.Bool
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.fileTypeTwo1
                  `cast`
                (<UseHaskellAPI.UserRequest>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <GHC.Types.Bool>_N
                               <'Network.HTTP.Types.Method.POST>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
c84e59a71423288a48e51cd88325588c
  fileTypeTwo1 ::
    UseHaskellAPI.UserRequest
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            GHC.Types.Bool)
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: (\ (body :: UseHaskellAPI.UserRequest) ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ GHC.Types.Bool
                   @ 'Network.HTTP.Types.Method.POST
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa9
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   UseHaskellAPIClient.fileTypeTwo5
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           GHC.Types.Bool))
                   (Servant.Common.Req.Req
                      UseHaskellAPIClient.fileTypeTwo2
                      (GHC.Types.[]
                         @ (Data.Text.Internal.Text,
                            GHC.Base.Maybe Data.Text.Internal.Text))
                      (GHC.Base.Just
                         @ (Data.ByteString.Lazy.Internal.ByteString,
                            Network.HTTP.Media.MediaType.Internal.MediaType)
                         (Data.ByteString.Builder.toLazyByteString
                            (Data.Aeson.Encode.Builder.encodeToBuilder
                               (UseHaskellAPI.$fToJSONUserRequest1 body)
                                 `cast`
                               (Data.Aeson.Types.Generic.N:Tagged[0]
                                    <Data.Aeson.Types.Generic.True>_P
                                    <Data.Aeson.Types.Internal.Value>_R)),
                          Servant.API.ContentTypes.$fAcceptTYPEJSON1))
                      (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                      (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text)))) -}
969c966f7577dc071790fc7e57727791
  fileTypeTwo2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   UseHaskellAPIClient.fileTypeTwo3) -}
4b406ba6041a1cbfdeb8796ee9da7386
  fileTypeTwo3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   UseHaskellAPIClient.fileTypeTwo4) -}
81ea27ca880ad5a06f71525a3b08b484
  fileTypeTwo4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fileTypeTwo"#) -}
357339802f9efb1de460722f1635f491
  fileTypeTwo5 ::
    '[Servant.API.ContentTypes.JSON]
    GHC.Types.~~ '[Servant.API.ContentTypes.JSON]
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ [*]
                   @ [*]
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[Servant.API.ContentTypes.JSON]
                   @~ <'[Servant.API.ContentTypes.JSON]>_N) -}
23805e82c991d5559ee3582837a13ce0
  fileUpdate ::
    UseHaskellAPI.FileTime -> Servant.Common.Req.ClientM GHC.Types.Bool
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.fileUpdate1
                  `cast`
                (<UseHaskellAPI.FileTime>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <GHC.Types.Bool>_N
                               <'Network.HTTP.Types.Method.POST>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
cdfa3a9ae6092b585001a27785e90f37
  fileUpdate1 ::
    UseHaskellAPI.FileTime
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            GHC.Types.Bool)
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: (\ (body :: UseHaskellAPI.FileTime) ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ GHC.Types.Bool
                   @ 'Network.HTTP.Types.Method.POST
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa9
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   UseHaskellAPIClient.fileTypeTwo5
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           GHC.Types.Bool))
                   (Servant.Common.Req.Req
                      UseHaskellAPIClient.fileUpdate2
                      (GHC.Types.[]
                         @ (Data.Text.Internal.Text,
                            GHC.Base.Maybe Data.Text.Internal.Text))
                      (GHC.Base.Just
                         @ (Data.ByteString.Lazy.Internal.ByteString,
                            Network.HTTP.Media.MediaType.Internal.MediaType)
                         (Data.ByteString.Builder.toLazyByteString
                            (Data.Aeson.Encode.Builder.encodeToBuilder
                               (UseHaskellAPI.$fToJSONFileTime1 body)
                                 `cast`
                               (Data.Aeson.Types.Generic.N:Tagged[0]
                                    <Data.Aeson.Types.Generic.True>_P
                                    <Data.Aeson.Types.Internal.Value>_R)),
                          Servant.API.ContentTypes.$fAcceptTYPEJSON1))
                      (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                      (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text)))) -}
9627d37433a2710db3f93ecb01d75e58
  fileUpdate2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   UseHaskellAPIClient.fileUpdate3) -}
2dbe5bba58180fbaca474220b447d045
  fileUpdate3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   UseHaskellAPIClient.fileUpdate4) -}
af114e675743ea58234cf74beaa26c75
  fileUpdate4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fileUpdate"#) -}
4c0f292f32d639149bad66c9ef5e94e8
  getREADME :: Servant.Common.Req.ClientM UseHaskellAPI.ResponseData
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.getREADME1
                  `cast`
                (Trans
                     (<Servant.Common.Req.ClientEnv>_R
                      ->_R Trans
                               (Sym (GHC.Types.N:IO[0]
                                         <Data.Either.Either
                                            Servant.Common.Req.ServantError
                                            UseHaskellAPI.ResponseData>_R))
                               (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                         <Servant.Common.Req.ServantError>_N
                                         <GHC.Types.IO>_R
                                         <UseHaskellAPI.ResponseData>_N)))
                     (Trans
                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Servant.Common.Req.ClientEnv>_R
                                    <Control.Monad.Trans.Except.ExceptT
                                       Servant.Common.Req.ServantError GHC.Types.IO>_R
                                    <UseHaskellAPI.ResponseData>_N))
                          (Sym (Servant.Common.Req.N:ClientM[0]) <UseHaskellAPI.ResponseData>_N))) -}
8c7ecfe66481f5af865c2879f0538b0f
  getREADME1 ::
    Servant.Common.Req.ClientEnv
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Common.Req.ServantError UseHaskellAPI.ResponseData #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta1 :: Servant.Common.Req.ClientEnv)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (UseHaskellAPIClient.getREADME_eta
                         `cast`
                       (Trans
                            (Servant.Common.Req.N:ClientM[0] <([Network.HTTP.Types.Header.Header],
                                                               UseHaskellAPI.ResponseData)>_N)
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <Servant.Common.Req.ClientEnv>_R
                                 <Control.Monad.Trans.Except.ExceptT
                                    Servant.Common.Req.ServantError GHC.Types.IO>_R
                                 <([Network.HTTP.Types.Header.Header],
                                   UseHaskellAPI.ResponseData)>_N))
                         eta1)
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <([Network.HTTP.Types.Header.Header],
                                  UseHaskellAPI.ResponseData)>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError
                                   ([Network.HTTP.Types.Header.Header],
                                    UseHaskellAPI.ResponseData)>_R))
                        eta2 of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1 of wild {
                      Data.Either.Left x
                      -> Data.Either.Left
                           @ Servant.Common.Req.ServantError
                           @ UseHaskellAPI.ResponseData
                           x
                      Data.Either.Right y
                      -> Data.Either.Right
                           @ Servant.Common.Req.ServantError
                           @ UseHaskellAPI.ResponseData
                           (Data.Tuple.snd
                              @ [Network.HTTP.Types.Header.Header]
                              @ UseHaskellAPI.ResponseData
                              y) } #) }) -}
fdd34a8c4b27730b0e787509896fff60
  getREADME2 :: Servant.Common.Req.Req
  {- Unfolding: (Servant.Common.Req.Req
                   UseHaskellAPIClient.getREADME3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
bd4ffe6e2e91d8c36a882f5b06dc851d
  getREADME3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   UseHaskellAPIClient.getREADME4) -}
d28ad7d19d9670a97b6494121008ad8f
  getREADME4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   UseHaskellAPIClient.getREADME5) -}
6d83cb703eb2ab38058b9aff8a88f140
  getREADME5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "getREADME"#) -}
ffbcc5167f44a4575b29457887b48f8c
  getREADME_eta ::
    Servant.Common.Req.ClientM
      ([Network.HTTP.Types.Header.Header], UseHaskellAPI.ResponseData)
  {- Unfolding: (Servant.Common.Req.performRequestCT
                   @ Servant.API.ContentTypes.JSON
                   @ UseHaskellAPI.ResponseData
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa10
                   (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON)
                   Network.HTTP.Types.Method.methodGet
                   UseHaskellAPIClient.getREADME2) -}
085e4b0a3be1a4bd21bfbd32396c7a78
  loadEnvVars ::
    GHC.Base.Maybe GHC.Base.String
    -> Servant.Common.Req.ClientM UseHaskellAPI.ResponseData
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.loadEnvVars1
                  `cast`
                (<GHC.Base.Maybe [GHC.Types.Char]>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <UseHaskellAPI.ResponseData>_N
                               <'Network.HTTP.Types.Method.GET>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
06019f7b7b88d6e5d678be45aff6deed
  loadEnvVars1 ::
    GHC.Base.Maybe [GHC.Types.Char]
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            UseHaskellAPI.ResponseData)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w5 :: GHC.Base.Maybe [GHC.Types.Char]) ->
                 Servant.Client.$w$cclientWithRoute4
                   @ *
                   @ "name"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        UseHaskellAPI.ResponseData)
                   UseHaskellAPIClient.loadEnvVars7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"name">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"name">_N))
                   Web.Internal.HttpApiData.$fToHttpApiData[]
                   UseHaskellAPIClient.loadEnvVars6
                     `cast`
                   (Sym (Servant.Client.N:HasClient[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                UseHaskellAPI.ResponseData>_N))
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.QueryParam.QueryParam "name" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              UseHaskellAPI.ResponseData))
                   UseHaskellAPIClient.loadEnvVars2
                   w5) -}
76a0272ad998628fc3de751e60299dd0
  loadEnvVars2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   UseHaskellAPIClient.loadEnvVars3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
b25199d05a10788a26d4a68ef4868a57
  loadEnvVars3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   UseHaskellAPIClient.loadEnvVars4) -}
f4b3fbf98b452a30dc80a3813039a454
  loadEnvVars4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   UseHaskellAPIClient.loadEnvVars5) -}
0e548787281d26ee1e579edee5b9ee0d
  loadEnvVars5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "load_environment_variables"#) -}
11f9bafad1df691519430b094f537e8b
  loadEnvVars6 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         UseHaskellAPI.ResponseData)
    -> Servant.Common.Req.Req
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            UseHaskellAPI.ResponseData)
  {- Arity: 2, Strictness: <S,1*H><L,1*U(U,U,U,A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               UseHaskellAPI.ResponseData))
                   (w4 :: Servant.Common.Req.Req) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ UseHaskellAPI.ResponseData
                   @ 'Network.HTTP.Types.Method.GET
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa10
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   UseHaskellAPIClient.fileTypeTwo5
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           UseHaskellAPI.ResponseData))
                   w4 }) -}
c972b6548e96783c985fdaa23b529494
  loadEnvVars7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "name"#) -}
7c73a9eab3bcb3ca30cf7dd1ecad3e05
  performRestCall ::
    GHC.Base.Maybe GHC.Base.String
    -> Servant.Common.Req.ClientM UseHaskellAPI.ResponseData
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.performRestCall1
                  `cast`
                (<GHC.Base.Maybe [GHC.Types.Char]>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <UseHaskellAPI.ResponseData>_N
                               <'Network.HTTP.Types.Method.GET>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
fcc240b71dc4530d54019214f873752d
  performRestCall1 ::
    GHC.Base.Maybe [GHC.Types.Char]
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            UseHaskellAPI.ResponseData)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w5 :: GHC.Base.Maybe [GHC.Types.Char]) ->
                 Servant.Client.$w$cclientWithRoute4
                   @ *
                   @ "filter"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        UseHaskellAPI.ResponseData)
                   UseHaskellAPIClient.performRestCall6
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"filter">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"filter">_N))
                   Web.Internal.HttpApiData.$fToHttpApiData[]
                   UseHaskellAPIClient.loadEnvVars6
                     `cast`
                   (Sym (Servant.Client.N:HasClient[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                UseHaskellAPI.ResponseData>_N))
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.QueryParam.QueryParam "filter" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              UseHaskellAPI.ResponseData))
                   UseHaskellAPIClient.performRestCall2
                   w5) -}
f9c4f1882a5c1802b4a90f99e1b202c8
  performRestCall2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   UseHaskellAPIClient.performRestCall3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
c3a95ca190977e2bbc2a4a7068d10baf
  performRestCall3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   UseHaskellAPIClient.performRestCall4) -}
0687d9366705c1a1df9e7bccaaa03bee
  performRestCall4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   UseHaskellAPIClient.performRestCall5) -}
210bb6d1f5b9e9761f0a252da993d2e4
  performRestCall5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "performRESTCall"#) -}
c34a05359af593f487bac457d6a91c19
  performRestCall6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "filter"#) -}
de2730612b806333cd4b885e40db7d1b
  restAPI :: Data.Proxy.Proxy UseHaskellAPI.API
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (Data.Proxy.Proxy @ * @ UseHaskellAPI.API) -}
8236546170b7787d84ea2cd23507e3da
  searchFiles ::
    GHC.Base.Maybe GHC.Base.String
    -> Servant.Common.Req.ClientM [UseHaskellAPI.UserFile]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.searchFiles1
                  `cast`
                (<GHC.Base.Maybe [GHC.Types.Char]>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <[UseHaskellAPI.UserFile]>_N
                               <'Network.HTTP.Types.Method.GET>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
3ebba1061f21136bf911666bb604feb9
  searchFiles1 ::
    GHC.Base.Maybe [GHC.Types.Char]
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [UseHaskellAPI.UserFile])
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w5 :: GHC.Base.Maybe [GHC.Types.Char]) ->
                 Servant.Client.$w$cclientWithRoute4
                   @ *
                   @ "filename"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        [UseHaskellAPI.UserFile])
                   UseHaskellAPIClient.searchFiles7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"filename">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"filename">_N))
                   Web.Internal.HttpApiData.$fToHttpApiData[]
                   UseHaskellAPIClient.searchFiles6
                     `cast`
                   (Sym (Servant.Client.N:HasClient[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                [UseHaskellAPI.UserFile]>_N))
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.QueryParam.QueryParam "filename" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              [UseHaskellAPI.UserFile]))
                   UseHaskellAPIClient.searchFiles2
                   w5) -}
e8599ac4d78e4e53ba0a2db9c96eb849
  searchFiles2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   UseHaskellAPIClient.searchFiles3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
e7fee18e1cc9c38a2dc2fe9fd6d57a2b
  searchFiles3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   UseHaskellAPIClient.searchFiles4) -}
f09164f2b295502e4fbe40d779be83fd
  searchFiles4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   UseHaskellAPIClient.searchFiles5) -}
1f247b6c40d20bf7fac6924a8f31b6bb
  searchFiles5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "searchFiles"#) -}
7120f146575695272c216bba6a6bb21b
  searchFiles6 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         [UseHaskellAPI.UserFile])
    -> Servant.Common.Req.Req
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [UseHaskellAPI.UserFile])
  {- Arity: 2, Strictness: <S,1*H><L,1*U(U,U,U,A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               [UseHaskellAPI.UserFile]))
                   (w4 :: Servant.Common.Req.Req) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ [UseHaskellAPI.UserFile]
                   @ 'Network.HTTP.Types.Method.GET
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   UseHaskellAPIClient.fileTypeTwo5
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [UseHaskellAPI.UserFile]))
                   w4 }) -}
438880229c36c6c0f35292579495516a
  searchFiles7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "filename"#) -}
0ef8136d07d765e174cc540d81801c1b
  searchMessage ::
    GHC.Base.Maybe GHC.Base.String
    -> Servant.Common.Req.ClientM [UseHaskellAPI.Message]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.searchMessage1
                  `cast`
                (<GHC.Base.Maybe [GHC.Types.Char]>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <[UseHaskellAPI.Message]>_N
                               <'Network.HTTP.Types.Method.GET>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
4e36a2761dced0167e753dc2efb21b6d
  searchMessage1 ::
    GHC.Base.Maybe [GHC.Types.Char]
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [UseHaskellAPI.Message])
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w5 :: GHC.Base.Maybe [GHC.Types.Char]) ->
                 Servant.Client.$w$cclientWithRoute4
                   @ *
                   @ "name"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        [UseHaskellAPI.Message])
                   UseHaskellAPIClient.loadEnvVars7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"name">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"name">_N))
                   Web.Internal.HttpApiData.$fToHttpApiData[]
                   UseHaskellAPIClient.searchMessage6
                     `cast`
                   (Sym (Servant.Client.N:HasClient[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                [UseHaskellAPI.Message]>_N))
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.QueryParam.QueryParam "name" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              [UseHaskellAPI.Message]))
                   UseHaskellAPIClient.searchMessage2
                   w5) -}
c08fe52d2030b25e6e8fa13e097be4f7
  searchMessage2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   UseHaskellAPIClient.searchMessage3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
b0c78d8a181acfea0ba020eb28b0ad9e
  searchMessage3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   UseHaskellAPIClient.searchMessage4) -}
449807986804cd1ee9071ea738aa5ec0
  searchMessage4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   UseHaskellAPIClient.searchMessage5) -}
c786f7942ea4d04405dcf153750790fc
  searchMessage5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "searchMessage"#) -}
a47c292c656c377d566e6d4515b0b072
  searchMessage6 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         [UseHaskellAPI.Message])
    -> Servant.Common.Req.Req
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [UseHaskellAPI.Message])
  {- Arity: 2, Strictness: <S,1*H><L,1*U(U,U,U,A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               [UseHaskellAPI.Message]))
                   (w4 :: Servant.Common.Req.Req) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ [UseHaskellAPI.Message]
                   @ 'Network.HTTP.Types.Method.GET
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa5
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   UseHaskellAPIClient.fileTypeTwo5
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [UseHaskellAPI.Message]))
                   w4 }) -}
f67525b9f10acd03a164bb9a49bc41a8
  storeMessage ::
    UseHaskellAPI.Message -> Servant.Common.Req.ClientM GHC.Types.Bool
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.storeMessage1
                  `cast`
                (<UseHaskellAPI.Message>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <GHC.Types.Bool>_N
                               <'Network.HTTP.Types.Method.POST>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
78c99f0fd2809ce4ef2a87b4d7b09d8a
  storeMessage1 ::
    UseHaskellAPI.Message
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            GHC.Types.Bool)
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: (\ (body :: UseHaskellAPI.Message) ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ GHC.Types.Bool
                   @ 'Network.HTTP.Types.Method.POST
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa9
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   UseHaskellAPIClient.fileTypeTwo5
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           GHC.Types.Bool))
                   (Servant.Common.Req.Req
                      UseHaskellAPIClient.storeMessage2
                      (GHC.Types.[]
                         @ (Data.Text.Internal.Text,
                            GHC.Base.Maybe Data.Text.Internal.Text))
                      (GHC.Base.Just
                         @ (Data.ByteString.Lazy.Internal.ByteString,
                            Network.HTTP.Media.MediaType.Internal.MediaType)
                         (Data.ByteString.Builder.toLazyByteString
                            (Data.Aeson.Encode.Builder.encodeToBuilder
                               (UseHaskellAPI.$fToJSONMessage1 body)
                                 `cast`
                               (Data.Aeson.Types.Generic.N:Tagged[0]
                                    <Data.Aeson.Types.Generic.True>_P
                                    <Data.Aeson.Types.Internal.Value>_R)),
                          Servant.API.ContentTypes.$fAcceptTYPEJSON1))
                      (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                      (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text)))) -}
c13b4ecf17cf7351b4812bab889699dc
  storeMessage2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   UseHaskellAPIClient.storeMessage3) -}
8bfc0b1e691d71175251e1d1586633a3
  storeMessage3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   UseHaskellAPIClient.storeMessage4) -}
36e6894385e000bb030565bc894d5b4d
  storeMessage4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "storeMessage"#) -}
a66b6d84cd0382091371e986f29b1e09
  uploadFile ::
    UseHaskellAPI.UserFile -> Servant.Common.Req.ClientM GHC.Types.Bool
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                UseHaskellAPIClient.uploadFile1
                  `cast`
                (<UseHaskellAPI.UserFile>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <GHC.Types.Bool>_N
                               <'Network.HTTP.Types.Method.POST>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
4ee20003f20378614f19916753c0e410
  uploadFile1 ::
    UseHaskellAPI.UserFile
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            GHC.Types.Bool)
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>,
     Unfolding: (\ (body :: UseHaskellAPI.UserFile) ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ GHC.Types.Bool
                   @ 'Network.HTTP.Types.Method.POST
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa9
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   UseHaskellAPIClient.fileTypeTwo5
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           GHC.Types.Bool))
                   (Servant.Common.Req.Req
                      UseHaskellAPIClient.uploadFile2
                      (GHC.Types.[]
                         @ (Data.Text.Internal.Text,
                            GHC.Base.Maybe Data.Text.Internal.Text))
                      (GHC.Base.Just
                         @ (Data.ByteString.Lazy.Internal.ByteString,
                            Network.HTTP.Media.MediaType.Internal.MediaType)
                         (Data.ByteString.Builder.toLazyByteString
                            (Data.Aeson.Encode.Builder.encodeToBuilder
                               (UseHaskellAPI.$fToJSONUserFile1 body)
                                 `cast`
                               (Data.Aeson.Types.Generic.N:Tagged[0]
                                    <Data.Aeson.Types.Generic.True>_P
                                    <Data.Aeson.Types.Internal.Value>_R)),
                          Servant.API.ContentTypes.$fAcceptTYPEJSON1))
                      (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                      (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text)))) -}
22e9dd72d81289737ce5ee54ec111ca8
  uploadFile2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   UseHaskellAPIClient.uploadFile3) -}
57352330977fcd79fab20f2f6dfea13a
  uploadFile3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   UseHaskellAPIClient.uploadFile4) -}
0aec1a48ac770186fb39aec8adf39692
  uploadFile4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "uploadFile"#) -}
"SPEC/UseHaskellAPIClient $fMimeUnrenderTYPEJSONa @ Bool" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                           GHC.Types.Bool)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ GHC.Types.Bool
                                                   $dFromJSON
  = UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa9
"SPEC/UseHaskellAPIClient $fMimeUnrenderTYPEJSONa @ ResponseData" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                   UseHaskellAPI.ResponseData)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ UseHaskellAPI.ResponseData
                                                   $dFromJSON
  = UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa10
"SPEC/UseHaskellAPIClient $fMimeUnrenderTYPEJSONa @ [Message]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                [UseHaskellAPI.Message])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ [UseHaskellAPI.Message]
                                                   $dFromJSON
  = UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa5
"SPEC/UseHaskellAPIClient $fMimeUnrenderTYPEJSONa @ [UserFile]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                 [UseHaskellAPI.UserFile])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ [UseHaskellAPI.UserFile]
                                                   $dFromJSON
  = UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa
"SPEC/UseHaskellAPIClient $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ Bool" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                          GHC.Types.Bool)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ GHC.Types.Bool
                                                                  $dFromJSON
  = UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2
"SPEC/UseHaskellAPIClient $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ ResponseData" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                                  UseHaskellAPI.ResponseData)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ UseHaskellAPI.ResponseData
                                                                  $dFromJSON
  = UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender3
"SPEC/UseHaskellAPIClient $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [Message]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                               [UseHaskellAPI.Message])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [UseHaskellAPI.Message]
                                                                  $dFromJSON
  = UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1
"SPEC/UseHaskellAPIClient $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [UserFile]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                                [UseHaskellAPI.UserFile])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [UseHaskellAPI.UserFile]
                                                                  $dFromJSON
  = UseHaskellAPIClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

