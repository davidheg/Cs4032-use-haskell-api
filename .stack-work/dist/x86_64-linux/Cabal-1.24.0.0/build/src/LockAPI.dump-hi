
==================== FINAL INTERFACE ====================
2017-02-03 13:49:16.806592 UTC

interface use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9:LockAPI [orphan module] [family instance module] 8001
  interface hash: 55b7b5721255de8f8762b2966ce39681
  ABI hash: 0dd55842794a316d073f4da84dc0c0f9
  export-list hash: ca1ecb9db7f69e40b3353c690ddde037
  orphan hash: cfde007c4ab1826f8e09a3e9959a6c25
  flag hash: b0e3f8b573d72bae0f984477a0acb626
  sig of: Nothing
  used TH splices: False
  where
exports:
  LockAPI.API
  LockAPI.Lock{LockAPI.Lock fileID user}
  LockAPI.LockRequest{LockAPI.LockRequest filename username}
module dependencies:
package dependencies: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.2@blaze-html-0.8.1.2-2kD96kJB6JEGow1dP8IL6C
                      blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-5a5pBG0fO8kJX4ke3K7j3D
                      bson-0.3.2.3@bson-0.3.2.3-3QA3aP5EtCyCltXUzEKOsQ
                      bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      containers-0.5.7.1@containers-0.5.7.1
                      cryptohash-0.11.9@cryptohash-0.11.9-9KNu0EEbreBFrmNJAeHgYz
                      cryptonite-0.19@cryptonite-0.19-G9PYO4oOEqhDTta2u9rAaU
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      http-api-data-0.3.2@http-api-data-0.3.2-9RGKpfYtINZ17YsGZel6a3
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-media-0.6.4@http-media-0.6.4-82jDVCpdN5H696EFF5l5I4
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      integer-gmp-1.0.0.1 memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY
                      servant-server-0.9.1.1@servant-server-0.9.1.1-FKQvXJjQ1586gh3lj2fX3G
                      string-conversions-0.4@string-conversions-0.4-8T0UFmRDEly2gsNJzmHrNQ
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0 unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.2.0@unix-compat-0.4.2.0-GNHotEMWE5dJ4oYFhgibIV
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      uri-bytestring-0.2.2.0@uri-bytestring-0.2.2.0-HlVoBJYzvCi57p7OpVBB6a
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-6csRgbgolyoCCOLw42RlBs
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0:Data.Bson.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0:Data.Bson.Generic
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         http-api-data-0.3.2@http-api-data-0.3.2-9RGKpfYtINZ17YsGZel6a3:Web.Internal.FormUrlEncoded
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.ContentTypes
                         servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.IsSecure
                         servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.Verbs
                         servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.Utils.Links
                         servant-server-0.9.1.1@servant-server-0.9.1.1-FKQvXJjQ1586gh3lj2fX3G:Servant.Server.Internal
                         servant-server-0.9.1.1@servant-server-0.9.1.1-FKQvXJjQ1586gh3lj2fX3G:Servant.Server.Internal.BasicAuth
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         uri-bytestring-0.2.2.0@uri-bytestring-0.2.2.0-HlVoBJYzvCi57p7OpVBB6a:URI.ByteString.Types
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson 94b59824488f369f190c261b6e39e7ba
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.TH 869262ef224a0287f5d5fc093506acd2
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Class c9d74667288c52e23279e16b75c64023
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Generics 8e2a7658e8b966c1d29d0d5fd4129f38
import  -/  base-4.9.0.0:GHC.Read 817c914615ac8e308afc0c675fb3f671
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:Text.ParserCombinators.ReadPrec 9512e2f4b227f507f87a150887202aed
import  -/  base-4.9.0.0:Text.Read.Lex fe3dd7b823826bf6870140c5363f9596
import  -/  bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0:Data.Bson.Generic 8688e6671f6f36dd3a9c6c1c23977c50
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.Alternative a8f3f7a60f7890ff9e0a1e9385ffa181
import  -/  servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.ContentTypes d8c1540fb52cdea3bc6d8d38e05ed304
import  -/  servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.ReqBody 02b2b9e2acd82fc22ef8523a64751a62
import  -/  servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.Sub 67774a8dbb87ab755e14208eb85e49d5
import  -/  servant-0.9.1.1@servant-0.9.1.1-1YvZcaz0OLV3uNDBdJkKrY:Servant.API.Verbs 16180854d75d1ecf87215b310ce5d353
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-FKQvXJjQ1586gh3lj2fX3G:Servant a941d94ca23174dd63fc0fee91773582
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock b91051c7767d1f23314064be1d4311d7
c165c86568daee379f1d6bc767af773f
  $fEqLock :: GHC.Classes.Eq LockAPI.Lock
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ LockAPI.Lock LockAPI.$fEqLock_$c== LockAPI.$fEqLock_$c/= -}
59af277d867951fd43fdccbad0972355
  $fEqLockRequest :: GHC.Classes.Eq LockAPI.LockRequest
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ LockAPI.LockRequest
                  LockAPI.$fEqLockRequest_$c==
                  LockAPI.$fEqLockRequest_$c/= -}
59af277d867951fd43fdccbad0972355
  $fEqLockRequest_$c/= ::
    LockAPI.LockRequest -> LockAPI.LockRequest -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: LockAPI.LockRequest) (w1 :: LockAPI.LockRequest) ->
                 case w of ww { LockAPI.LockRequest ww1 ww2 ->
                 case w1 of ww3 { LockAPI.LockRequest ww4 ww5 ->
                 LockAPI.$w$c/=1 ww1 ww2 ww4 ww5 } }) -}
59af277d867951fd43fdccbad0972355
  $fEqLockRequest_$c== ::
    LockAPI.LockRequest -> LockAPI.LockRequest -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: LockAPI.LockRequest) (w1 :: LockAPI.LockRequest) ->
                 case w of ww { LockAPI.LockRequest ww1 ww2 ->
                 case w1 of ww3 { LockAPI.LockRequest ww4 ww5 ->
                 LockAPI.$w$c==1 ww1 ww2 ww4 ww5 } }) -}
c165c86568daee379f1d6bc767af773f
  $fEqLock_$c/= :: LockAPI.Lock -> LockAPI.Lock -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: LockAPI.Lock) (w1 :: LockAPI.Lock) ->
                 case w of ww { LockAPI.Lock ww1 ww2 ->
                 case w1 of ww3 { LockAPI.Lock ww4 ww5 ->
                 LockAPI.$w$c/= ww1 ww2 ww4 ww5 } }) -}
c165c86568daee379f1d6bc767af773f
  $fEqLock_$c== :: LockAPI.Lock -> LockAPI.Lock -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: LockAPI.Lock) (w1 :: LockAPI.Lock) ->
                 case w of ww { LockAPI.Lock ww1 ww2 ->
                 case w1 of ww3 { LockAPI.Lock ww4 ww5 ->
                 LockAPI.$w$c== ww1 ww2 ww4 ww5 } }) -}
c165c86568daee379f1d6bc767af773f
  $fFromBSONLock :: Data.Bson.Generic.FromBSON LockAPI.Lock
  DFunId
  {- Arity: 1, Strictness: <S,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                LockAPI.$fFromBSONLock_$cfromBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:FromBSON[0] <LockAPI.Lock>_N)) -}
d4349ceef38b52d10e2a70ae0e267b74
  $fFromBSONLock1 :: GHC.Generics.SingI ('GHC.Base.Just "user")
  {- Unfolding: InlineRule (0, True, True)
                LockAPI.$fFromBSONLock2
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "user">_N) -}
8e009c00b1a67db255368ab8520d94ae
  $fFromBSONLock2 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "user")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "user")
                   @ "user"
                   @~ <'GHC.Base.Just "user">_N
                   LockAPI.$fFromBSONLock3
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"user">_N)) -}
3d17f76ba846ea07b8855a466f8ac79a
  $fFromBSONLock3 :: GHC.Generics.R:SingSymbols "user"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "user"
                   LockAPI.$fFromBSONLock4
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"user">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"user">_N))) -}
4bf7e62275bef6916e060e477668aa35
  $fFromBSONLock4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "user"#) -}
a6ee1b31219de1c5d2744aad5588882e
  $fFromBSONLock5 :: GHC.Generics.SingI ('GHC.Base.Just "fileID")
  {- Unfolding: InlineRule (0, True, True)
                LockAPI.$fFromBSONLock6
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "fileID">_N) -}
3ab926bdc58c065fe72470191b3f8f87
  $fFromBSONLock6 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "fileID")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "fileID")
                   @ "fileID"
                   @~ <'GHC.Base.Just "fileID">_N
                   LockAPI.$fFromBSONLock7
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"fileID">_N)) -}
1c37692218b61476eff19c13b7d66e60
  $fFromBSONLock7 :: GHC.Generics.R:SingSymbols "fileID"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "fileID"
                   LockAPI.$fFromBSONLock8
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"fileID">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"fileID">_N))) -}
93f5d58b30185d4528f0213738b5b4f5
  $fFromBSONLock8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fileID"#) -}
59af277d867951fd43fdccbad0972355
  $fFromBSONLockRequest ::
    Data.Bson.Generic.FromBSON LockAPI.LockRequest
  DFunId
  {- Arity: 1, Strictness: <S,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                LockAPI.$fFromBSONLockRequest_$cfromBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:FromBSON[0] <LockAPI.LockRequest>_N)) -}
1972d092687805285cd618f2b5977724
  $fFromBSONLockRequest1 ::
    GHC.Generics.SingI ('GHC.Base.Just "username")
  {- Unfolding: InlineRule (0, True, True)
                LockAPI.$fFromBSONLockRequest2
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "username">_N) -}
9de7e1f3f59ba2397636331d3ce2dbfe
  $fFromBSONLockRequest2 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "username")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "username")
                   @ "username"
                   @~ <'GHC.Base.Just "username">_N
                   LockAPI.$fFromBSONLockRequest3
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"username">_N)) -}
3400350ef991af089531bc6461c26294
  $fFromBSONLockRequest3 :: GHC.Generics.R:SingSymbols "username"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "username"
                   LockAPI.$fFromBSONLockRequest4
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"username">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"username">_N))) -}
82a9da8a9e99f020239d881ec0fd08f4
  $fFromBSONLockRequest4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "username"#) -}
0418f98bc0b500070ee06cab79e1925f
  $fFromBSONLockRequest5 ::
    GHC.Generics.SingI ('GHC.Base.Just "filename")
  {- Unfolding: InlineRule (0, True, True)
                LockAPI.$fFromBSONLockRequest6
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "filename">_N) -}
591fe1beab8e188d131f9f6bfb6d3b87
  $fFromBSONLockRequest6 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "filename")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "filename")
                   @ "filename"
                   @~ <'GHC.Base.Just "filename">_N
                   LockAPI.$fFromBSONLockRequest7
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"filename">_N)) -}
d6f44f7ce2fb272c5a98bc617459c253
  $fFromBSONLockRequest7 :: GHC.Generics.R:SingSymbols "filename"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "filename"
                   LockAPI.$fFromBSONLockRequest8
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"filename">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"filename">_N))) -}
b9031a944baec1b7354e94141ddcf352
  $fFromBSONLockRequest8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "filename"#) -}
59af277d867951fd43fdccbad0972355
  $fFromBSONLockRequest_$cfromBSON ::
    Data.Bson.Document -> GHC.Base.Maybe LockAPI.LockRequest
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (doc :: Data.Bson.Document) ->
                 case Data.Bson.Generic.$w$cgenericFromBSON
                        @ [GHC.Types.Char]
                        @ ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "filename")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                        @ GHC.Generics.R
                        Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                        LockAPI.$fFromBSONLockRequest_$s$fSelectorMetaMetaSel1
                        @ GHC.Prim.Any
                        doc of wild {
                   GHC.Base.Nothing -> GHC.Base.Nothing @ LockAPI.LockRequest
                   GHC.Base.Just x
                   -> case Data.Bson.Generic.$w$cgenericFromBSON
                             @ [GHC.Types.Char]
                             @ ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "username")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                             @ GHC.Generics.R
                             Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                             LockAPI.$fFromBSONLockRequest_$s$fSelectorMetaMetaSel
                             @ GHC.Prim.Any
                             doc of wild1 {
                        GHC.Base.Nothing -> GHC.Base.Nothing @ LockAPI.LockRequest
                        GHC.Base.Just x1
                        -> GHC.Base.Just
                             @ LockAPI.LockRequest
                             (LockAPI.LockRequest
                                x `cast`
                                (Trans
                                     (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "filename")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                                     (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                x1
                                  `cast`
                                (Trans
                                     (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "username")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                                     (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P
                                          <GHC.Base.String>_R
                                          <GHC.Prim.Any>_P))) } }) -}
00f3038240d2725d6ef43b5df01522ca
  $fFromBSONLockRequest_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "username")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "username")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  LockAPI.$fFromBSONLockRequest_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "username")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLockRequest1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "username")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLockRequest1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "username")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLockRequest1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
abd5e67b5de10d19e5b2509430328a3e
  $fFromBSONLockRequest_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "filename")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "filename")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  LockAPI.$fFromBSONLockRequest_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "filename")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLockRequest5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "filename")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLockRequest5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "filename")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLockRequest5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
03f9f8b2264754ace1ff6ec64b867524
  $fFromBSONLockRequest_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "username")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "username")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 LockAPI.$fFromBSONLockRequest4) -}
c981591acdca88cc6acbd957bf8aaea7
  $fFromBSONLockRequest_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "filename")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "filename")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 LockAPI.$fFromBSONLockRequest8) -}
c165c86568daee379f1d6bc767af773f
  $fFromBSONLock_$cfromBSON ::
    Data.Bson.Document -> GHC.Base.Maybe LockAPI.Lock
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (doc :: Data.Bson.Document) ->
                 case Data.Bson.Generic.$w$cgenericFromBSON
                        @ [GHC.Types.Char]
                        @ ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "fileID")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                        @ GHC.Generics.R
                        Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                        LockAPI.$fFromBSONLock_$s$fSelectorMetaMetaSel1
                        @ GHC.Prim.Any
                        doc of wild {
                   GHC.Base.Nothing -> GHC.Base.Nothing @ LockAPI.Lock
                   GHC.Base.Just x
                   -> case Data.Bson.Generic.$w$cgenericFromBSON
                             @ [GHC.Types.Char]
                             @ ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "user")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                             @ GHC.Generics.R
                             Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                             LockAPI.$fFromBSONLock_$s$fSelectorMetaMetaSel
                             @ GHC.Prim.Any
                             doc of wild1 {
                        GHC.Base.Nothing -> GHC.Base.Nothing @ LockAPI.Lock
                        GHC.Base.Just x1
                        -> GHC.Base.Just
                             @ LockAPI.Lock
                             (LockAPI.Lock
                                x `cast`
                                (Trans
                                     (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "fileID")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                                     (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                x1
                                  `cast`
                                (Trans
                                     (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "user")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                                     (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P
                                          <GHC.Base.String>_R
                                          <GHC.Prim.Any>_P))) } }) -}
ee44f7af795733aae371050b9fe02196
  $fFromBSONLock_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "user")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "user")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  LockAPI.$fFromBSONLock_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "user")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLock1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "user")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLock1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "user")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLock1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
b873666ab90160d1c25c306f18b3ac43
  $fFromBSONLock_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "fileID")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "fileID")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  LockAPI.$fFromBSONLock_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "fileID")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLock5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "fileID")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLock5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "fileID")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     LockAPI.$fFromBSONLock5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
01722692dfa46ee3301e25f8d9469688
  $fFromBSONLock_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "user")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "user")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 LockAPI.$fFromBSONLock4) -}
573bc7686493e07b1f7f520c3fbacb27
  $fFromBSONLock_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "fileID")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "fileID")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 LockAPI.$fFromBSONLock8) -}
73fd583eb10c6ba918115447202cbfed
  $fFromBSON[] :: Data.Bson.Generic.FromBSON [GHC.Types.Char]
  DFunId
  {- Arity: 1, Strictness: <L,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                LockAPI.$fFromBSON[]_$cfromBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:FromBSON[0] <[GHC.Types.Char]>_N)) -}
638cc5d6281ad6dddf95705a46119338
  $fFromBSON[]1 ::
    GHC.Types.Int
    -> Data.Bson.Document
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  ":"
                  ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                  'GHC.Types.False)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     'GHC.Base.Nothing
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Char)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [GHC.Types.Char])))
            a1)
  {- Arity: 2, Strictness: <S(S),1*U(1*U)><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1 (w :: GHC.Types.Int) (w1 :: Data.Bson.Document) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LockAPI.$w$dGFromBSON @ a1 ww1 w1 }) -}
987f9f48f42a7e3b4375cdfe8e07f0b9
  $fFromBSON[]2 ::
    GHC.Base.Maybe
      ((GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               ":"
               ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
               'GHC.Types.False)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Types.Char)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [GHC.Types.Char])))
         a1)
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Base.Just
                   @ ((GHC.Generics.:+:)
                        (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
                        (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              ":"
                              ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                              'GHC.Types.False)
                           (GHC.Generics.S1
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 GHC.Types.Char)
                            GHC.Generics.:*: GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 [GHC.Types.Char])))
                        a1)
                   (LockAPI.$fFromBSON[]3 @ a1)) -}
18bb4d105e4867198672f04ef2d0b37e
  $fFromBSON[]3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            ":"
            ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
            'GHC.Types.False)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Types.Char)
          GHC.Generics.:*: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [GHC.Types.Char])))
      a1
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           ":"
                           ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                           'GHC.Types.False)
                        (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 GHC.Types.Char)
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 [GHC.Types.Char])))
                   @ a1
                   (GHC.Generics.U1 @ a1)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "[]" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <a1>_N)) -}
5e6fe6d400eb05fdfede53b948a8648f
  $fFromBSON[]4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[]"#) -}
218cc894dc18f418b04a36d679c07bd3
  $fFromBSON[]5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ":"#) -}
85e64e9d948bfdce718cc6fb48a40bea
  $fFromBSON[]_$cfromBSON ::
    Data.Bson.Document -> GHC.Base.Maybe [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (doc :: Data.Bson.Document) ->
                 case LockAPI.$fFromBSON[]1
                        @ GHC.Prim.Any
                        LockAPI.$fFromBSON[]_lvl47
                        doc of wild {
                   GHC.Base.Nothing -> GHC.Base.Nothing @ [GHC.Types.Char]
                   GHC.Base.Just x
                   -> GHC.Base.Just
                        @ [GHC.Types.Char]
                        (GHC.Generics.$fGeneric[]_$cto
                           @ GHC.Types.Char
                           @ GHC.Prim.Any
                           x `cast`
                           (Trans
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.D>_P
                                          <'GHC.Generics.MetaData
                                             "[]" "GHC.Types" "ghc-prim" 'GHC.Types.False>_P
                                          <GHC.Generics.C1
                                             ('GHC.Generics.MetaCons
                                                "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.C1
                                                              ('GHC.Generics.MetaCons
                                                                 ":"
                                                                 ('GHC.Generics.InfixI
                                                                    'GHC.Generics.LeftAssociative 9)
                                                                 'GHC.Types.False)
                                                              (GHC.Generics.S1
                                                                 ('GHC.Generics.MetaSel
                                                                    'GHC.Base.Nothing
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.Rec0 GHC.Types.Char)
                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                  ('GHC.Generics.MetaSel
                                                                                     'GHC.Base.Nothing
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.Rec0
                                                                                     [GHC.Types.Char]))>_R))
                                (Sub (Sym (GHC.Generics.Rep_[][0]
                                               <GHC.Types.Char>_N))) <GHC.Prim.Any>_N)) }) -}
f08671ce700437e59e80b2fed12c235d
  $fFromBSON[]_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         'GHC.Base.Nothing
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       'GHC.Base.Nothing
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  LockAPI.$fFromBSON[]_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ 'GHC.Base.Nothing
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     (GHC.Generics.$WSNothing @ GHC.Types.Symbol)
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N <'GHC.Base.Nothing>_N)
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ 'GHC.Base.Nothing
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     (GHC.Generics.$WSNothing @ GHC.Types.Symbol)
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N <'GHC.Base.Nothing>_N)
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ 'GHC.Base.Nothing
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     (GHC.Generics.$WSNothing @ GHC.Types.Symbol)
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N <'GHC.Base.Nothing>_N)
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
fbe16de7be66ddc3f06a7a3c36ca0856
  $fFromBSON[]_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         'GHC.Base.Nothing
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 GHC.Types.[] @ GHC.Types.Char) -}
9e38c38acae80141a830783bbd89fa82
  $fFromBSON[]_lvl47 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
c165c86568daee379f1d6bc767af773f
  $fFromJSONLock :: Data.Aeson.Types.Class.FromJSON LockAPI.Lock
  DFunId
  {- Arity: 1, Strictness: <L,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                LockAPI.$fFromJSONLock_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <LockAPI.Lock>_N)) -}
ce7b980abd9ca5af500411338f7b2834
  $fFromJSONLock1 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "fileID")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "user")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,A><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 LockAPI.$w$dConsFromJSON' @ a w w2) -}
9baaf352c70431b15e4b3f7a90be9cf9
  $fFromJSONLock2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 2, Strictness: <L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 LockAPI.$w$dGFromJSON @ a1 w1) -}
d9e1fa0156fa9d5e81a1c644a669e537
  $fFromJSONLock3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "String"#) -}
876378beeb3915c7fb03abd3eaab1745
  $fFromJSONLock4 ::
    (GHC.Generics.:*:)
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "fileID")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String))
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "user")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String))
      a
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: (GHC.Generics.:*:)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fileID")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "user")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             a) ->
                 GHC.Types.False) -}
59af277d867951fd43fdccbad0972355
  $fFromJSONLockRequest ::
    Data.Aeson.Types.Class.FromJSON LockAPI.LockRequest
  DFunId
  {- Arity: 1, Strictness: <L,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                LockAPI.$fFromJSONLockRequest_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <LockAPI.LockRequest>_N)) -}
0dc862dcec2debaa25e378883831315f
  $fFromJSONLockRequest1 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "filename")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "username")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,A><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 LockAPI.$w$dConsFromJSON'1 @ a w w2) -}
9714592eb3e69d9fe71ea7798d2a33f8
  $fFromJSONLockRequest2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 2, Strictness: <L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 LockAPI.$w$dGFromJSON1 @ a1 w1) -}
41e43de829d45495aeea0f5796a27e53
  $fFromJSONLockRequest3 ::
    (GHC.Generics.:*:)
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "filename")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String))
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "username")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String))
      a
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: (GHC.Generics.:*:)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "filename")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "username")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             a) ->
                 GHC.Types.False) -}
59af277d867951fd43fdccbad0972355
  $fFromJSONLockRequest_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser LockAPI.LockRequest
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "filename")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "username")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             GHC.Prim.Any)
                   = Data.Aeson.Types.Generic.$fConsFromJSONf_$cconsParseJSON
                       @ (GHC.Generics.S1
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "filename")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.Base.String)
                          GHC.Generics.:*: GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "username")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Base.String))
                       @ Data.Aeson.Types.Generic.True
                       LockAPI.$fFromJSONLockRequest3
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:IsRecord[0]
                                 <GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "filename")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "username")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       LockAPI.$fFromJSONLockRequest1
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:ConsFromJSON'[0]
                                 <GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "filename")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "username")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       x
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             LockAPI.LockRequest f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "filename")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "username")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          GHC.Prim.Any>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "filename")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "username")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                GHC.Prim.Any) ->
                     ks
                       (case a2 of wild { GHC.Generics.:*: ds ds1 ->
                        LockAPI.LockRequest
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "filename")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "username")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <LockAPI.LockRequest>_R))) -}
c165c86568daee379f1d6bc767af773f
  $fFromJSONLock_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser LockAPI.Lock
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fileID")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "user")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             GHC.Prim.Any)
                   = Data.Aeson.Types.Generic.$fConsFromJSONf_$cconsParseJSON
                       @ (GHC.Generics.S1
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "fileID")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.Base.String)
                          GHC.Generics.:*: GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "user")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Base.String))
                       @ Data.Aeson.Types.Generic.True
                       LockAPI.$fFromJSONLock4
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:IsRecord[0]
                                 <GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "fileID")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "user")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       LockAPI.$fFromJSONLock1
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:ConsFromJSON'[0]
                                 <GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "fileID")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "user")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       x
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success LockAPI.Lock f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "fileID")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "user")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          GHC.Prim.Any>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileID")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "user")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                GHC.Prim.Any) ->
                     ks
                       (case a2 of wild { GHC.Generics.:*: ds ds1 ->
                        LockAPI.Lock
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "fileID")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "user")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <LockAPI.Lock>_R))) -}
c165c86568daee379f1d6bc767af773f
  $fGenericLock :: GHC.Generics.Generic LockAPI.Lock
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ LockAPI.Lock
                  LockAPI.$fGenericLock_$cfrom
                  LockAPI.$fGenericLock_$cto -}
59af277d867951fd43fdccbad0972355
  $fGenericLockRequest :: GHC.Generics.Generic LockAPI.LockRequest
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ LockAPI.LockRequest
                  LockAPI.$fGenericLockRequest_$cfrom
                  LockAPI.$fGenericLockRequest_$cto -}
59af277d867951fd43fdccbad0972355
  $fGenericLockRequest_$cfrom ::
    LockAPI.LockRequest -> GHC.Generics.Rep LockAPI.LockRequest x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: LockAPI.LockRequest) ->
                 case ds of wild { LockAPI.LockRequest g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "filename")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "username")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "filename")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "username")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:M1[0]
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "LockRequest" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "filename")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "username")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)>_R))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "LockRequest"
                                        "LockAPI"
                                        "use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "LockRequest" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "filename")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "username")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))>_R))
                           (Sub (Sym (LockAPI.Rep_LockRequest[0])))) <x>_N) }) -}
59af277d867951fd43fdccbad0972355
  $fGenericLockRequest_$cto ::
    GHC.Generics.Rep LockAPI.LockRequest x -> LockAPI.LockRequest
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep LockAPI.LockRequest x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (LockAPI.Rep_LockRequest[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "LockRequest"
                                        "LockAPI"
                                        "use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "LockRequest" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "filename")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "username")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "LockRequest" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "filename")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "username")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 LockAPI.LockRequest
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "filename")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "username")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) }) -}
c165c86568daee379f1d6bc767af773f
  $fGenericLock_$cfrom ::
    LockAPI.Lock -> GHC.Generics.Rep LockAPI.Lock x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: LockAPI.Lock) ->
                 case ds of wild { LockAPI.Lock g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "fileID")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "user")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileID")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "user")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:M1[0]
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "Lock" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileID")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "user")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)>_R))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Lock"
                                        "LockAPI"
                                        "use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Lock" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "fileID")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "user")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))>_R))
                           (Sub (Sym (LockAPI.Rep_Lock[0])))) <x>_N) }) -}
c165c86568daee379f1d6bc767af773f
  $fGenericLock_$cto ::
    GHC.Generics.Rep LockAPI.Lock x -> LockAPI.Lock
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep LockAPI.Lock x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (LockAPI.Rep_Lock[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Lock"
                                        "LockAPI"
                                        "use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Lock" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "fileID")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "user")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Lock" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "fileID")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "user")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 LockAPI.Lock
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "fileID")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "user")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) }) -}
c165c86568daee379f1d6bc767af773f
  $fReadLock :: GHC.Read.Read LockAPI.Lock
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ LockAPI.Lock
                  LockAPI.$fReadLock_$creadsPrec
                  LockAPI.$fReadLock_$creadList
                  LockAPI.$fReadLock_$creadPrec
                  LockAPI.$fReadLock_$creadListPrec -}
c165c86568daee379f1d6bc767af773f
  $fReadLock1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([LockAPI.Lock] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [LockAPI.Lock] -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ LockAPI.Lock
                   LockAPI.$fReadLock2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <LockAPI.Lock>_R))
                   @ b
                   eta1) -}
c165c86568daee379f1d6bc767af773f
  $fReadLock2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP LockAPI.Lock
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ LockAPI.Lock
                   LockAPI.$fReadLock3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <LockAPI.Lock>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <LockAPI.Lock>_R)))) -}
c165c86568daee379f1d6bc767af773f
  $fReadLock3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (LockAPI.Lock -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: LockAPI.Lock -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LockAPI.$w$creadPrec ww1 @ b w1 }) -}
c165c86568daee379f1d6bc767af773f
  $fReadLock4 :: Text.ParserCombinators.ReadP.P [LockAPI.Lock]
  {- Unfolding: (GHC.Read.$wlist
                   @ LockAPI.Lock
                   LockAPI.$fReadLock2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <LockAPI.Lock>_R))
                   @ [LockAPI.Lock]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [LockAPI.Lock])) -}
59af277d867951fd43fdccbad0972355
  $fReadLockRequest :: GHC.Read.Read LockAPI.LockRequest
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ LockAPI.LockRequest
                  LockAPI.$fReadLockRequest_$creadsPrec
                  LockAPI.$fReadLockRequest_$creadList
                  LockAPI.$fReadLockRequest_$creadPrec
                  LockAPI.$fReadLockRequest_$creadListPrec -}
59af277d867951fd43fdccbad0972355
  $fReadLockRequest1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([LockAPI.LockRequest] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [LockAPI.LockRequest]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ LockAPI.LockRequest
                   LockAPI.$fReadLockRequest2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <LockAPI.LockRequest>_R))
                   @ b
                   eta1) -}
59af277d867951fd43fdccbad0972355
  $fReadLockRequest2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP LockAPI.LockRequest
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ LockAPI.LockRequest
                   LockAPI.$fReadLockRequest3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <LockAPI.LockRequest>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <LockAPI.LockRequest>_R)))) -}
59af277d867951fd43fdccbad0972355
  $fReadLockRequest3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (LockAPI.LockRequest -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: LockAPI.LockRequest -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LockAPI.$w$creadPrec1 ww1 @ b w1 }) -}
59af277d867951fd43fdccbad0972355
  $fReadLockRequest4 ::
    Text.ParserCombinators.ReadP.P [LockAPI.LockRequest]
  {- Unfolding: (GHC.Read.$wlist
                   @ LockAPI.LockRequest
                   LockAPI.$fReadLockRequest2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <LockAPI.LockRequest>_R))
                   @ [LockAPI.LockRequest]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [LockAPI.LockRequest])) -}
59af277d867951fd43fdccbad0972355
  $fReadLockRequest_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [LockAPI.LockRequest]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [LockAPI.LockRequest]
                   LockAPI.$fReadLockRequest4) -}
59af277d867951fd43fdccbad0972355
  $fReadLockRequest_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [LockAPI.LockRequest]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                LockAPI.$fReadLockRequest1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[LockAPI.LockRequest]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[LockAPI.LockRequest]>_R))) -}
59af277d867951fd43fdccbad0972355
  $fReadLockRequest_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec LockAPI.LockRequest
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                LockAPI.$fReadLockRequest2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <LockAPI.LockRequest>_R)) -}
59af277d867951fd43fdccbad0972355
  $fReadLockRequest_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS LockAPI.LockRequest
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ LockAPI.LockRequest
                   ((GHC.Read.$fReadDouble10
                       @ LockAPI.LockRequest
                       LockAPI.$fReadLockRequest3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <LockAPI.LockRequest>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <LockAPI.LockRequest>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <LockAPI.LockRequest>_R)
                      @ LockAPI.LockRequest
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ LockAPI.LockRequest))) -}
c165c86568daee379f1d6bc767af773f
  $fReadLock_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [LockAPI.Lock]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [LockAPI.Lock]
                   LockAPI.$fReadLock4) -}
c165c86568daee379f1d6bc767af773f
  $fReadLock_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [LockAPI.Lock]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                LockAPI.$fReadLock1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[LockAPI.Lock]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[LockAPI.Lock]>_R))) -}
c165c86568daee379f1d6bc767af773f
  $fReadLock_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec LockAPI.Lock
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                LockAPI.$fReadLock2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <LockAPI.Lock>_R)) -}
c165c86568daee379f1d6bc767af773f
  $fReadLock_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS LockAPI.Lock
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ LockAPI.Lock
                   ((GHC.Read.$fReadDouble10
                       @ LockAPI.Lock
                       LockAPI.$fReadLock3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <LockAPI.Lock>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <LockAPI.Lock>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <LockAPI.Lock>_R)
                      @ LockAPI.Lock
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ LockAPI.Lock))) -}
c165c86568daee379f1d6bc767af773f
  $fShowLock :: GHC.Show.Show LockAPI.Lock
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ LockAPI.Lock
                  LockAPI.$fShowLock_$cshowsPrec
                  LockAPI.$fShowLock_$cshow
                  LockAPI.$fShowLock_$cshowList -}
c165c86568daee379f1d6bc767af773f
  $fShowLock1 :: LockAPI.Lock -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: LockAPI.Lock) (w1 :: GHC.Base.String) ->
                 case w of ww { LockAPI.Lock ww1 ww2 ->
                 LockAPI.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
7ce4c885dde637eb7eca7172323cd41e
  $fShowLock2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
6641c4e7e0069b6f6c7b366b3af414fe
  $fShowLock3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "user = "#) -}
515cf86eec18bcddd84ca5dcc95dc47e
  $fShowLock4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
7434005d034d93bf52574a76b2afc1fc
  $fShowLock5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fileID = "#) -}
b6cf227dbaa7af5e6a6ea48c7ceeb428
  $fShowLock6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Lock {"#) -}
59af277d867951fd43fdccbad0972355
  $fShowLockRequest :: GHC.Show.Show LockAPI.LockRequest
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ LockAPI.LockRequest
                  LockAPI.$fShowLockRequest_$cshowsPrec
                  LockAPI.$fShowLockRequest_$cshow
                  LockAPI.$fShowLockRequest_$cshowList -}
59af277d867951fd43fdccbad0972355
  $fShowLockRequest1 :: LockAPI.LockRequest -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: LockAPI.LockRequest) (w1 :: GHC.Base.String) ->
                 case w of ww { LockAPI.LockRequest ww1 ww2 ->
                 LockAPI.$w$cshowsPrec1 0# ww1 ww2 w1 }) -}
748e9b87927d2bd41f8922322fa99ee6
  $fShowLockRequest2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "username = "#) -}
b6dd5fd3930c9010c55691e3abb88c0a
  $fShowLockRequest3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "filename = "#) -}
ce3b846b8efab3c2461cca797fd6b57c
  $fShowLockRequest4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LockRequest {"#) -}
59af277d867951fd43fdccbad0972355
  $fShowLockRequest_$cshow :: LockAPI.LockRequest -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LockAPI.LockRequest) ->
                 LockAPI.$fShowLockRequest_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
59af277d867951fd43fdccbad0972355
  $fShowLockRequest_$cshowList ::
    [LockAPI.LockRequest] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LockAPI.LockRequest
                   LockAPI.$fShowLockRequest1) -}
59af277d867951fd43fdccbad0972355
  $fShowLockRequest_$cshowsPrec ::
    GHC.Types.Int -> LockAPI.LockRequest -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LockAPI.LockRequest)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LockAPI.LockRequest ww3 ww4 ->
                 LockAPI.$w$cshowsPrec1 ww1 ww3 ww4 w2 } }) -}
c165c86568daee379f1d6bc767af773f
  $fShowLock_$cshow :: LockAPI.Lock -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LockAPI.Lock) ->
                 LockAPI.$fShowLock_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c165c86568daee379f1d6bc767af773f
  $fShowLock_$cshowList :: [LockAPI.Lock] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LockAPI.Lock
                   LockAPI.$fShowLock1) -}
c165c86568daee379f1d6bc767af773f
  $fShowLock_$cshowsPrec ::
    GHC.Types.Int -> LockAPI.Lock -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LockAPI.Lock)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LockAPI.Lock ww3 ww4 ->
                 LockAPI.$w$cshowsPrec ww1 ww3 ww4 w2 } }) -}
59af277d867951fd43fdccbad0972355
  $fToBSONLockRequest :: Data.Bson.Generic.ToBSON LockAPI.LockRequest
  DFunId
  {- Arity: 1, Strictness: <L,1*U(U,U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                LockAPI.$fToBSONLockRequest_$ctoBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:ToBSON[0] <LockAPI.LockRequest>_N)) -}
dae51ff8f8bea821e7a995354411ad8c
  $fToBSONLockRequest1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LockRequest"#) -}
79a6d72324df1224e4d9af5faac99809
  $fToBSONLockRequest2 ::
    GHC.Types.Int
    -> (GHC.Generics.:*:)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "filename")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Base.String))
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "username")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Base.String))
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,A><S,1*U(1*U,1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: (GHC.Generics.:*:)
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "filename")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Base.String))
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "username")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Base.String))
                            a1) ->
                 case w1 of ww { GHC.Generics.:*: ww1 ww2 ->
                 LockAPI.$w$dGToBSON @ a1 ww1 ww2 }) -}
60d2adda2476323fd51172e90c59fd22
  $fToBSONLockRequest3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   LockAPI.$fFromBSONLockRequest4
                   0#
                   ipv }) -}
75d930a424cb3c9fd26c629921a4a017
  $fToBSONLockRequest4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   LockAPI.$fFromBSONLockRequest8
                   0#
                   ipv }) -}
59af277d867951fd43fdccbad0972355
  $fToBSONLockRequest_$ctoBSON ::
    LockAPI.LockRequest -> Data.Bson.Document
  {- Arity: 1, Strictness: <L,1*U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a1 :: LockAPI.LockRequest) ->
                 Data.Bson.Generic.$w$cgenericToBSON1
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "filename")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 GHC.Base.String)
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "username")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                   @ ('GHC.Generics.MetaCons
                        "LockRequest" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   LockAPI.$fToBSONLockRequest2
                     `cast`
                   (Sym (Data.Bson.Generic.N:GToBSON[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "filename")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "username")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))
                   LockAPI.$fToBSONLockRequest_$s$fConstructorMetaMetaCons
                   @ GHC.Prim.Any
                   1#
                   (case a1 of wild { LockAPI.LockRequest g1 g2 ->
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "filename")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "username")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ GHC.Prim.Any
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "filename")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "username")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N)))
                      `cast`
                    (Sym (GHC.Generics.N:M1[0]
                              <GHC.Generics.C>_P
                              <'GHC.Generics.MetaCons
                                 "LockRequest" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "filename")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "username")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.Base.String)>_R) <GHC.Prim.Any>_N) })) -}
4b1ec3853bdb163f4f2cc7a23f6498fa
  $fToBSONLockRequest_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "LockRequest" 'GHC.Generics.PrefixI 'GHC.Types.True)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "LockRequest" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "LockRequest"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     LockAPI.$fToBSONLockRequest1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"LockRequest">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"LockRequest">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "LockRequest"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     LockAPI.$fToBSONLockRequest1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"LockRequest">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"LockRequest">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "LockRequest"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     LockAPI.$fToBSONLockRequest1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"LockRequest">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"LockRequest">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N)) -}
c1cd45e239e50e392bf8053607be6939
  $fToBSON[] :: Data.Bson.Generic.ToBSON [GHC.Types.Char]
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                LockAPI.$fToBSON[]_$s$dmtoBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:ToBSON[0] <[GHC.Types.Char]>_N)) -}
c601ce09644660f4fd5076ca774ae671
  $fToBSON[]1 ::
    Data.Bson.Generic.GConstructorCount
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "[]" "GHC.Types" "ghc-prim" 'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                ":"
                                ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                                'GHC.Types.False)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Char)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [GHC.Types.Char]))))
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                LockAPI.$fToBSON[]2
                  `cast`
                (Trans
                     (forall (a1 :: <*>_N).
                      Sym (GHC.Generics.N:M1[0]
                               <GHC.Generics.D>_P
                               <'GHC.Generics.MetaData
                                  "[]" "GHC.Types" "ghc-prim" 'GHC.Types.False>_P
                               <GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      ":"
                                                      ('GHC.Generics.InfixI
                                                         'GHC.Generics.LeftAssociative 9)
                                                      'GHC.Types.False)
                                                   (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Char)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          'GHC.Base.Nothing
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          [GHC.Types.Char]))>_R) <a1>_N
                      ->_R <GHC.Types.Int>_R)
                     (Sym (Data.Bson.Generic.N:GConstructorCount[0]
                               <GHC.Generics.D1
                                  ('GHC.Generics.MetaData
                                     "[]" "GHC.Types" "ghc-prim" 'GHC.Types.False)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         ":"
                                                         ('GHC.Generics.InfixI
                                                            'GHC.Generics.LeftAssociative 9)
                                                         'GHC.Types.False)
                                                      (GHC.Generics.S1
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.Rec0 GHC.Types.Char)
                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                          ('GHC.Generics.MetaSel
                                                                             'GHC.Base.Nothing
                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                             'GHC.Generics.NoSourceStrictness
                                                                             'GHC.Generics.DecidedLazy)
                                                                          (GHC.Generics.Rec0
                                                                             [GHC.Types.Char])))>_N))) -}
7b8fc002ea18cb21c1169b1314c261c0
  $fToBSON[]2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            ":"
            ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
            'GHC.Types.False)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Types.Char)
          GHC.Generics.:*: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [GHC.Types.Char])))
      a1
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ a1
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  ":"
                                  ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                                  'GHC.Types.False)
                               (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Char)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   ('GHC.Generics.MetaSel
                                                      'GHC.Base.Nothing
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.Rec0 [GHC.Types.Char])))
                            a1) ->
                 LockAPI.$fFromBSON[]_lvl47) -}
e68cf9123a6b593ac704cafd0cefbf0c
  $fToBSON[]3 ::
    Data.Bson.Generic.GToBSON
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "[]" "GHC.Types" "ghc-prim" 'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                ":"
                                ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                                'GHC.Types.False)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Char)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [GHC.Types.Char]))))
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                LockAPI.$fToBSON[]4
                  `cast`
                (Trans
                     (forall (a1 :: <*>_N).
                      <GHC.Types.Int>_R
                      ->_R Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "[]" "GHC.Types" "ghc-prim" 'GHC.Types.False>_P
                                    <GHC.Generics.C1
                                       ('GHC.Generics.MetaCons
                                          "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: GHC.Generics.C1
                                                        ('GHC.Generics.MetaCons
                                                           ":"
                                                           ('GHC.Generics.InfixI
                                                              'GHC.Generics.LeftAssociative 9)
                                                           'GHC.Types.False)
                                                        (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              'GHC.Base.Nothing
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Types.Char)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               [GHC.Types.Char]))>_R) <a1>_N
                      ->_R <Data.Bson.Document>_R)
                     (Sym (Data.Bson.Generic.N:GToBSON[0]
                               <GHC.Generics.D1
                                  ('GHC.Generics.MetaData
                                     "[]" "GHC.Types" "ghc-prim" 'GHC.Types.False)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         ":"
                                                         ('GHC.Generics.InfixI
                                                            'GHC.Generics.LeftAssociative 9)
                                                         'GHC.Types.False)
                                                      (GHC.Generics.S1
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.Rec0 GHC.Types.Char)
                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                          ('GHC.Generics.MetaSel
                                                                             'GHC.Base.Nothing
                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                             'GHC.Generics.NoSourceStrictness
                                                                             'GHC.Generics.DecidedLazy)
                                                                          (GHC.Generics.Rec0
                                                                             [GHC.Types.Char])))>_N))) -}
0e0b1709a1ed1e532db5384922c71c1c
  $fToBSON[]4 ::
    GHC.Types.Int
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               ":"
               ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
               'GHC.Types.False)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Types.Char)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [GHC.Types.Char])))
         a1
    -> Data.Bson.Document
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  ":"
                                  ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                                  'GHC.Types.False)
                               (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Char)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   ('GHC.Generics.MetaSel
                                                      'GHC.Base.Nothing
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.Rec0 [GHC.Types.Char])))
                            a1) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LockAPI.$w$dGToBSON1 @ a1 ww1 w1 }) -}
ab8909d6eaf10b613c66dbf71527d057
  $fToBSON[]5 ::
    GHC.Generics.SingI
      ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
  {- Unfolding: InlineRule (0, True, True)
                LockAPI.$fToBSON[]6
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingFixityIa0[0]))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N) <'GHC.Generics.InfixI
                                                                                 'GHC.Generics.LeftAssociative
                                                                                 9>_N) -}
1b461ba8f40702a3272fffe17de2be2f
  $fToBSON[]6 ::
    GHC.Generics.R:SingFixityIa
      ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
  {- HasNoCafRefs,
     Unfolding: (GHC.Generics.SInfix
                   @ ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                   @ 'GHC.Generics.LeftAssociative
                   @ 9
                   @~ <'GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9>_N
                   GHC.Generics.$WSLeftAssociative
                   LockAPI.$fToBSON[]7) -}
713fb89f8e11892884daa1efd8c7c82e
  $fToBSON[]7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (9) -}
a67e67a0033727625846900f8271774b
  $fToBSON[]8 ::
    GHC.Types.Int
    -> (GHC.Generics.:*:)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Types.Char))
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 [GHC.Types.Char]))
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,A><S,1*U(1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: (GHC.Generics.:*:)
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  'GHC.Base.Nothing
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Types.Char))
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  'GHC.Base.Nothing
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 [GHC.Types.Char]))
                            a1) ->
                 case w1 of ww { GHC.Generics.:*: ww1 ww2 ->
                 LockAPI.$w$dGToBSON2 @ a1 ww1 ww2 }) -}
ed06d0575f4ea8d0ed768b5254a7e01c
  $fToBSON[]9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   (GHC.Types.[] @ GHC.Types.Char)
                   0#
                   ipv }) -}
2bb18aa9073b68ab27d07a1ecc68e2f9
  $fToBSON[]_$s$dmtoBSON :: [GHC.Types.Char] -> Data.Bson.Document
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (-4, True, False)
                (\ (a1 :: [GHC.Types.Char]) ->
                 LockAPI.$fToBSON[]3
                   `cast`
                 (Data.Bson.Generic.N:GToBSON[0]
                      (Sym (GHC.Generics.Rep_[][0] <GHC.Types.Char>_N)))
                   @ GHC.Prim.Any
                   (LockAPI.$fToBSON[]_$sconstructorCount a1)
                   (GHC.Generics.$fGeneric[]_$cfrom
                      @ GHC.Types.Char
                      @ GHC.Prim.Any
                      a1)) -}
deb52b08395d97e6ea00f5829f07dcf0
  $fToBSON[]_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         ":"
         ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
         'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       ":"
                       ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                       'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ ":"
                     @ ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                     @ 'GHC.Types.False
                     LockAPI.$fFromBSON[]5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <":">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <":">_N))
                     LockAPI.$fToBSON[]5
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ ":"
                     @ ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                     @ 'GHC.Types.False
                     LockAPI.$fFromBSON[]5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <":">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <":">_N))
                     LockAPI.$fToBSON[]5
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ ":"
                     @ ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                     @ 'GHC.Types.False
                     LockAPI.$fFromBSON[]5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <":">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <":">_N))
                     LockAPI.$fToBSON[]5
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
531db99177c76d3f089edfd29f429bb7
  $fToBSON[]_$s$fConstructorMetaMetaCons1 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "[]"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     LockAPI.$fFromBSON[]4
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"[]">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"[]">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "[]"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     LockAPI.$fFromBSON[]4
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"[]">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"[]">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "[]"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     LockAPI.$fFromBSON[]4
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"[]">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"[]">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
ad684dffb21952b51b0362286b5d5a75
  $fToBSON[]_$sconstructorCount :: [GHC.Types.Char] -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [GHC.Types.Char]) ->
                 LockAPI.$fToBSON[]1
                   `cast`
                 (Data.Bson.Generic.N:GConstructorCount[0]
                      (Sym (GHC.Generics.Rep_[][0] <GHC.Types.Char>_N)))
                   @ GHC.Prim.Any
                   (GHC.Generics.$fGeneric[]_$cfrom
                      @ GHC.Types.Char
                      @ GHC.Prim.Any
                      x)) -}
c165c86568daee379f1d6bc767af773f
  $fToJSONLock :: Data.Aeson.Types.Class.ToJSON LockAPI.Lock
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ LockAPI.Lock
                  LockAPI.$fToJSONLock_$ctoJSON
                  LockAPI.$fToJSONLock_$ctoEncoding -}
c165c86568daee379f1d6bc767af773f
  $fToJSONLock1 ::
    LockAPI.Lock
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: LockAPI.Lock) ->
                 case w of ww { LockAPI.Lock ww1 ww2 ->
                 case LockAPI.$w$ctoJSON ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
57164bcc66b84f3a9777f80ba88782af
  $fToJSONLock2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        LockAPI.$fToJSONLock3 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
4b843bfea94d610d0ef4e883a50902ad
  $fToJSONLock3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.Generic.$wouter6
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.Generic.$fFromPairM2
                   LockAPI.$fFromBSONLock4
                   0#
                   ipv }) -}
7e37ec3d72a53cd4d058a0bffc39bd58
  $fToJSONLock4 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
b568b82e67bc1d8aff155192db474e88
  $fToJSONLock5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        LockAPI.$fToJSONLock6 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
d109e97f0c3f054e17c46ec8c077e758
  $fToJSONLock6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.Generic.$wouter6
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.Generic.$fFromPairM2
                   LockAPI.$fFromBSONLock8
                   0#
                   ipv }) -}
59af277d867951fd43fdccbad0972355
  $fToJSONLockRequest ::
    Data.Aeson.Types.Class.ToJSON LockAPI.LockRequest
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ LockAPI.LockRequest
                  LockAPI.$fToJSONLockRequest_$ctoJSON
                  LockAPI.$fToJSONLockRequest_$ctoEncoding -}
59af277d867951fd43fdccbad0972355
  $fToJSONLockRequest1 ::
    LockAPI.LockRequest
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: LockAPI.LockRequest) ->
                 case w of ww { LockAPI.LockRequest ww1 ww2 ->
                 case LockAPI.$w$ctoJSON1 ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
25256deb70aede1868532182ad3b106e
  $fToJSONLockRequest2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        LockAPI.$fToJSONLockRequest3 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
71aeac14fe9e16b5b4bc441f88a72a52
  $fToJSONLockRequest3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.Generic.$wouter6
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.Generic.$fFromPairM2
                   LockAPI.$fFromBSONLockRequest4
                   0#
                   ipv }) -}
78e7e07966cecfbd18f06d4af72e537a
  $fToJSONLockRequest4 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        LockAPI.$fToJSONLockRequest5 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
c0993927d577a0e995eadfa0cd348794
  $fToJSONLockRequest5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.Generic.$wouter6
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.Generic.$fFromPairM2
                   LockAPI.$fFromBSONLockRequest8
                   0#
                   ipv }) -}
59af277d867951fd43fdccbad0972355
  $fToJSONLockRequest_$ctoEncoding ::
    LockAPI.LockRequest -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: LockAPI.LockRequest) ->
                 Data.Aeson.Encode.Builder.encodeToBuilder
                   (LockAPI.$fToJSONLockRequest_$ctoJSON eta))
                  `cast`
                (<LockAPI.LockRequest>_R
                 ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0])) -}
59af277d867951fd43fdccbad0972355
  $fToJSONLockRequest_$ctoJSON ::
    LockAPI.LockRequest -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>m1,
     Unfolding: InlineRule (0, True, True)
                LockAPI.$fToJSONLockRequest1
                  `cast`
                (<LockAPI.LockRequest>_R
                 ->_R Data.Aeson.Types.Generic.N:Tagged[0]
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
c165c86568daee379f1d6bc767af773f
  $fToJSONLock_$ctoEncoding ::
    LockAPI.Lock -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: LockAPI.Lock) ->
                 Data.Aeson.Encode.Builder.encodeToBuilder
                   (LockAPI.$fToJSONLock_$ctoJSON eta))
                  `cast`
                (<LockAPI.Lock>_R
                 ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0])) -}
c165c86568daee379f1d6bc767af773f
  $fToJSONLock_$ctoJSON ::
    LockAPI.Lock -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>m1,
     Unfolding: InlineRule (0, True, True)
                LockAPI.$fToJSONLock1
                  `cast`
                (<LockAPI.Lock>_R
                 ->_R Data.Aeson.Types.Generic.N:Tagged[0]
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
74a33a36337e5722bf4667a00500b72d
  $s$dmfromBSON13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Lock"#) -}
9eea9f217271a1ac16fe3055a176f75d
  $tc'Lock :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8051470273828381836##
                   14292264164208489221##
                   LockAPI.$trModule
                   LockAPI.$tc'Lock1) -}
c925ac945d5511c07ef86a5d30486fa6
  $tc'Lock1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Lock"#) -}
43e028c7ca846f7dafab7fe00239919c
  $tc'LockRequest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14184575039296099424##
                   3181346955035679463##
                   LockAPI.$trModule
                   LockAPI.$tc'LockRequest1) -}
4e0016eebc6d7a5654b6510567c80d8f
  $tc'LockRequest1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LockRequest"#) -}
0ce5f2773cda767da1cdb25c7c9311f2
  $tcLock :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15617880273726500662##
                   13184578253478003756##
                   LockAPI.$trModule
                   LockAPI.$tcLock1) -}
86be34975936bfbac329b7ba2e8d6f7a
  $tcLock1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lock"#) -}
f0733471bf9c1568739dd0395a16cdac
  $tcLockRequest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3946019342853752630##
                   10060098083695276434##
                   LockAPI.$trModule
                   LockAPI.$tcLockRequest1) -}
946749717684615980d514b328c60f15
  $tcLockRequest1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "LockRequest"#) -}
befd84fd7d7874ff7a4638cccc65f021
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   LockAPI.$trModule2
                   LockAPI.$trModule1) -}
ef705b6076521d011b02108ef94bcb0a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "LockAPI"#) -}
5ca35c82f5a88f3b5340ade9329e3f2c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9"#) -}
f383bfd4f6c3f66a2c28a5482e221efb
  $w$c/= ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww3 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } }) -}
111d62a2ccb68b0d39a2a78e95b02474
  $w$c/=1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww3 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } }) -}
58ca28ac418d4f862ad3f41a22eb3b90
  $w$c== ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Base.eqString ww1 ww3 }) -}
1dc383dd9372f79fb081aa2b6e14abad
  $w$c==1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Base.eqString ww1 ww3 }) -}
c165c86568daee379f1d6bc767af773f
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (LockAPI.Lock -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
59af277d867951fd43fdccbad0972355
  $w$creadPrec1 ::
    GHC.Prim.Int#
    -> forall b.
       (LockAPI.LockRequest -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
7f6cb0f49346fba93f2a0095120c3949
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       LockAPI.$fShowLock6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          LockAPI.$fShowLock5
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows8
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      LockAPI.$fShowLock4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         LockAPI.$fShowLock3
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows8
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     LockAPI.$fShowLock2
                                                     x))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w)) }) -}
48b98c20748b66c5fe4f69973bd730cf
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       LockAPI.$fShowLockRequest4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          LockAPI.$fShowLockRequest3
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows8
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      LockAPI.$fShowLock4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         LockAPI.$fShowLockRequest2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows8
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     LockAPI.$fShowLock2
                                                     x))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w)) }) -}
8697446ea0c7101722bbced560459ea9
  $w$ctoJSON ::
    GHC.Base.String
    -> GHC.Base.String -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String) (ww1 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                           (LockAPI.$fToJSONLock5,
                            case LockAPI.$w$dGToJSON
                                   @ GHC.Prim.Any
                                   ww
                                     `cast`
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Prim.Any>_P)) of ww2 { Unit# ww3 ->
                            Data.Aeson.Types.Internal.String ww3 })
                           (GHC.Types.:
                              @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                              (LockAPI.$fToJSONLock2,
                               case LockAPI.$w$dGToJSON
                                      @ GHC.Prim.Any
                                      ww1
                                        `cast`
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <GHC.Base.String>_R
                                                <GHC.Prim.Any>_P)) of ww2 { Unit# ww3 ->
                               Data.Aeson.Types.Internal.String ww3 })
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
d879fde51111b64c7d3321e2c7cdd281
  $w$ctoJSON1 ::
    GHC.Base.String
    -> GHC.Base.String -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String) (ww1 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                           (LockAPI.$fToJSONLockRequest4,
                            case LockAPI.$w$dGToJSON1
                                   @ GHC.Prim.Any
                                   ww
                                     `cast`
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Prim.Any>_P)) of ww2 { Unit# ww3 ->
                            Data.Aeson.Types.Internal.String ww3 })
                           (GHC.Types.:
                              @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                              (LockAPI.$fToJSONLockRequest2,
                               case LockAPI.$w$dGToJSON1
                                      @ GHC.Prim.Any
                                      ww1
                                        `cast`
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <GHC.Base.String>_R
                                                <GHC.Prim.Any>_P)) of ww2 { Unit# ww3 ->
                               Data.Aeson.Types.Internal.String ww3 })
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
6a704e0873a0d42b405939c3e65ee4de
  $w$dConsFromJSON' ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "fileID")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "user")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U,U)><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 case w1 of wild {
                   DEFAULT
                   -> (Data.Aeson.Types.Class.typeMismatch
                         @ ((GHC.Generics.:*:)
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "fileID")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "user")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String))
                              a)
                         Data.Aeson.Types.Generic.$fConsFromJSON'fTrue1
                         wild)
                        `cast`
                      (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                <Data.Aeson.Types.Generic.True>_P
                                <Data.Aeson.Types.Internal.Parser
                                   ((GHC.Generics.:*:)
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "fileID")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "user")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                                      a)>_R))
                   Data.Aeson.Types.Internal.Object obj
                   -> let {
                        e :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "user")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "user")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            LockAPI.$fFromBSONLock_$s$fSelectorMetaMetaSel
                            LockAPI.$fFromJSONLock2
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      let {
                        m :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "fileID")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "fileID")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            LockAPI.$fFromBSONLock_$s$fSelectorMetaMetaSel1
                            LockAPI.$fFromJSONLock2
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  ((GHC.Generics.:*:)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "fileID")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String))
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "user")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String))
                                     a)
                                  f
                                  r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "fileID")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Base.String)
                               a>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a2 :: GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fileID")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                     a) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "user")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a3 :: GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "user")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String)
                                        a) ->
                             ks
                               (GHC.Generics.:*:
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "fileID")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String))
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "user")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String))
                                  @ a
                                  a2
                                  a3))))
                        `cast`
                      (Trans
                           (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                     <(GHC.Generics.:*:)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "fileID")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "user")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                        a>_R))
                           (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                     <Data.Aeson.Types.Generic.True>_P
                                     <Data.Aeson.Types.Internal.Parser
                                        ((GHC.Generics.:*:)
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "fileID")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "user")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                           a)>_R))) }) -}
f54a4c62a494224c249a957aca27f4c6
  $w$dConsFromJSON'1 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "filename")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "username")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U,U)><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 case w1 of wild {
                   DEFAULT
                   -> (Data.Aeson.Types.Class.typeMismatch
                         @ ((GHC.Generics.:*:)
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "filename")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "username")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String))
                              a)
                         Data.Aeson.Types.Generic.$fConsFromJSON'fTrue1
                         wild)
                        `cast`
                      (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                <Data.Aeson.Types.Generic.True>_P
                                <Data.Aeson.Types.Internal.Parser
                                   ((GHC.Generics.:*:)
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "filename")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "username")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                                      a)>_R))
                   Data.Aeson.Types.Internal.Object obj
                   -> let {
                        e :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "username")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "username")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            LockAPI.$fFromBSONLockRequest_$s$fSelectorMetaMetaSel
                            LockAPI.$fFromJSONLockRequest2
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      let {
                        m :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "filename")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "filename")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            LockAPI.$fFromBSONLockRequest_$s$fSelectorMetaMetaSel1
                            LockAPI.$fFromJSONLockRequest2
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  ((GHC.Generics.:*:)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "filename")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String))
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "username")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String))
                                     a)
                                  f
                                  r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "filename")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Base.String)
                               a>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a2 :: GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "filename")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                     a) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "username")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a3 :: GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "username")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String)
                                        a) ->
                             ks
                               (GHC.Generics.:*:
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "filename")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String))
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "username")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String))
                                  @ a
                                  a2
                                  a3))))
                        `cast`
                      (Trans
                           (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                     <(GHC.Generics.:*:)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "filename")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "username")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                        a>_R))
                           (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                     <Data.Aeson.Types.Generic.True>_P
                                     <Data.Aeson.Types.Internal.Parser
                                        ((GHC.Generics.:*:)
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "filename")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "username")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                           a)>_R))) }) -}
77e9707fd1ccf0657cbc1659478ddb56
  $w$dGFromBSON ::
    GHC.Prim.Int#
    -> Data.Bson.Document
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  ":"
                  ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                  'GHC.Types.False)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     'GHC.Base.Nothing
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Char)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [GHC.Types.Char])))
            a1)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Prim.Int#)
                   (w :: Data.Bson.Document) ->
                 case ww of ds {
                   DEFAULT
                   -> let {
                        $j :: GHC.Prim.Void#
                              -> GHC.Base.Maybe
                                   ((GHC.Generics.:+:)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            ":"
                                            ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                                            'GHC.Types.False)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Char)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                'GHC.Base.Nothing
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 [GHC.Types.Char])))
                                      a1)
                          {- Arity: 1, Strictness: <L,A> -}
                        = \ (w1 :: GHC.Prim.Void#)[OneShot] ->
                          case Data.Bson.!?_$slook
                                 Data.Bson.Generic.constructorLabel
                                 w of wild {
                            GHC.Base.Nothing
                            -> GHC.Base.Nothing
                                 @ ((GHC.Generics.:+:)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            ":"
                                            ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                                            'GHC.Types.False)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Char)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                'GHC.Base.Nothing
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 [GHC.Types.Char])))
                                      a1)
                            GHC.Base.Just x
                            -> case Data.Bson.cast
                                      @ [GHC.Types.Char]
                                      @ GHC.Base.Maybe
                                      Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                                      GHC.Base.$fMonadMaybe
                                      x of wild1 {
                                 GHC.Base.Nothing
                                 -> GHC.Base.Nothing
                                      @ ((GHC.Generics.:+:)
                                           (GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1)
                                           (GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 ":"
                                                 ('GHC.Generics.InfixI
                                                    'GHC.Generics.LeftAssociative 9)
                                                 'GHC.Types.False)
                                              (GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Types.Char)
                                               GHC.Generics.:*: GHC.Generics.S1
                                                                  ('GHC.Generics.MetaSel
                                                                     'GHC.Base.Nothing
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.Rec0
                                                                     [GHC.Types.Char])))
                                           a1)
                                 GHC.Base.Just x1
                                 -> case GHC.Base.eqString x1 LockAPI.$fFromBSON[]5 of wild2 {
                                      GHC.Types.False
                                      -> GHC.Base.Nothing
                                           @ ((GHC.Generics.:+:)
                                                (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1)
                                                (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      ":"
                                                      ('GHC.Generics.InfixI
                                                         'GHC.Generics.LeftAssociative 9)
                                                      'GHC.Types.False)
                                                   (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Char)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          'GHC.Base.Nothing
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          [GHC.Types.Char])))
                                                a1)
                                      GHC.Types.True
                                      -> case Data.Bson.Generic.$w$cgenericFromBSON
                                                @ GHC.Types.Char
                                                @ ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                @ GHC.Generics.R
                                                Data.Bson.$fValChar
                                                LockAPI.$fFromBSON[]_$s$fSelectorMetaMetaSel
                                                @ a1
                                                w of wild4 {
                                           GHC.Base.Nothing
                                           -> GHC.Base.Nothing
                                                @ ((GHC.Generics.:+:)
                                                     (GHC.Generics.M1
                                                        GHC.Generics.C
                                                        ('GHC.Generics.MetaCons
                                                           "[]"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1)
                                                     (GHC.Generics.M1
                                                        GHC.Generics.C
                                                        ('GHC.Generics.MetaCons
                                                           ":"
                                                           ('GHC.Generics.InfixI
                                                              'GHC.Generics.LeftAssociative 9)
                                                           'GHC.Types.False)
                                                        (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              'GHC.Base.Nothing
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Types.Char)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               [GHC.Types.Char])))
                                                     a1)
                                           GHC.Base.Just x2
                                           -> case Data.Bson.Generic.$w$cgenericFromBSON
                                                     @ [GHC.Types.Char]
                                                     @ ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                     @ GHC.Generics.R
                                                     Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                                                     LockAPI.$fFromBSON[]_$s$fSelectorMetaMetaSel
                                                     @ a1
                                                     w of wild5 {
                                                GHC.Base.Nothing
                                                -> GHC.Base.Nothing
                                                     @ ((GHC.Generics.:+:)
                                                          (GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "[]"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.False)
                                                             GHC.Generics.U1)
                                                          (GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                ":"
                                                                ('GHC.Generics.InfixI
                                                                   'GHC.Generics.LeftAssociative 9)
                                                                'GHC.Types.False)
                                                             (GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   'GHC.Base.Nothing
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0 GHC.Types.Char)
                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    'GHC.Base.Nothing
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    [GHC.Types.Char])))
                                                          a1)
                                                GHC.Base.Just x3
                                                -> GHC.Base.Just
                                                     @ ((GHC.Generics.:+:)
                                                          (GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "[]"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.False)
                                                             GHC.Generics.U1)
                                                          (GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                ":"
                                                                ('GHC.Generics.InfixI
                                                                   'GHC.Generics.LeftAssociative 9)
                                                                'GHC.Types.False)
                                                             (GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   'GHC.Base.Nothing
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0 GHC.Types.Char)
                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    'GHC.Base.Nothing
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    [GHC.Types.Char])))
                                                          a1)
                                                     (GHC.Generics.R1
                                                        @ (GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "[]"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.False)
                                                             GHC.Generics.U1)
                                                        @ (GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                ":"
                                                                ('GHC.Generics.InfixI
                                                                   'GHC.Generics.LeftAssociative 9)
                                                                'GHC.Types.False)
                                                             (GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   'GHC.Base.Nothing
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0 GHC.Types.Char)
                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    'GHC.Base.Nothing
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    [GHC.Types.Char])))
                                                        @ a1
                                                        (GHC.Generics.:*:
                                                           @ (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   'GHC.Base.Nothing
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0 GHC.Types.Char))
                                                           @ (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   'GHC.Base.Nothing
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0
                                                                   [GHC.Types.Char]))
                                                           @ a1
                                                           x2
                                                           x3)
                                                          `cast`
                                                        (Sym (GHC.Generics.N:M1[0]
                                                                  <GHC.Generics.C>_P
                                                                  <'GHC.Generics.MetaCons
                                                                     ":"
                                                                     ('GHC.Generics.InfixI
                                                                        'GHC.Generics.LeftAssociative
                                                                        9)
                                                                     'GHC.Types.False>_P
                                                                  <GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        'GHC.Base.Nothing
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        GHC.Types.Char)
                                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                                      ('GHC.Generics.MetaSel
                                                                                         'GHC.Base.Nothing
                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                         'GHC.Generics.DecidedLazy)
                                                                                      (GHC.Generics.Rec0
                                                                                         [GHC.Types.Char])>_R) <a1>_N)) } } } } }
                      } in
                      case Data.Bson.!?_$slook
                             Data.Bson.Generic.constructorLabel
                             w of wild {
                        GHC.Base.Nothing -> $j GHC.Prim.void#
                        GHC.Base.Just x
                        -> case Data.Bson.cast
                                  @ [GHC.Types.Char]
                                  @ GHC.Base.Maybe
                                  Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                                  GHC.Base.$fMonadMaybe
                                  x of wild1 {
                             GHC.Base.Nothing -> $j GHC.Prim.void#
                             GHC.Base.Just x1
                             -> case GHC.Base.eqString x1 LockAPI.$fFromBSON[]4 of wild2 {
                                  GHC.Types.False -> $j GHC.Prim.void#
                                  GHC.Types.True -> LockAPI.$fFromBSON[]2 @ a1 } } }
                   0# -> LockAPI.$fFromBSON[]2 @ a1
                   1# -> LockAPI.$fFromBSON[]2 @ a1 }) -}
fdfdf05a55f24956e67a0a30c515319d
  $w$dGFromJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                   = case w of wild {
                       DEFAULT
                       -> Data.Aeson.Types.Class.typeMismatch
                            @ [GHC.Types.Char]
                            LockAPI.$fFromJSONLock3
                            wild
                       Data.Aeson.Types.Internal.String txt
                       -> case txt of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                          let {
                            a2 :: [GHC.Types.Char]
                            = let {
                                end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                              } in
                              letrec {
                                $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww end) of wild2 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.geWord# r# 55296##) of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                              ($wunfold (GHC.Prim.+# ww 1#))
                                         GHC.Types.True
                                         -> case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.leWord# r# 56319##) of wild4 {
                                              GHC.Types.False
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                   ($wunfold (GHC.Prim.+# ww 1#))
                                              GHC.Types.True
                                              -> case GHC.Prim.indexWord16Array#
                                                        dt
                                                        (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                                 GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.uncheckedIShiftL#
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#)
                                                                     55296#)
                                                                  10#)
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#1)
                                                                  56320#))
                                                            65536#)))
                                                   ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                                    GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                              } in
                              $wunfold dt1
                          } in
                          (\ @ (f1 :: * -> *)
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f1 r)
                             (ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Char] f1 r) ->
                           ks a2)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Char]>_R)) } }
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: [GHC.Types.Char]) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1>_R))) -}
22020fcf5e58ef6bfffaf0ba46858d7e
  $w$dGFromJSON1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                   = case w of wild {
                       DEFAULT
                       -> Data.Aeson.Types.Class.typeMismatch
                            @ [GHC.Types.Char]
                            LockAPI.$fFromJSONLock3
                            wild
                       Data.Aeson.Types.Internal.String txt
                       -> case txt of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                          let {
                            a2 :: [GHC.Types.Char]
                            = let {
                                end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                              } in
                              letrec {
                                $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww end) of wild2 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.geWord# r# 55296##) of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                              ($wunfold (GHC.Prim.+# ww 1#))
                                         GHC.Types.True
                                         -> case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.leWord# r# 56319##) of wild4 {
                                              GHC.Types.False
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                   ($wunfold (GHC.Prim.+# ww 1#))
                                              GHC.Types.True
                                              -> case GHC.Prim.indexWord16Array#
                                                        dt
                                                        (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                                 GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.uncheckedIShiftL#
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#)
                                                                     55296#)
                                                                  10#)
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#1)
                                                                  56320#))
                                                            65536#)))
                                                   ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                                    GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                              } in
                              $wunfold dt1
                          } in
                          (\ @ (f1 :: * -> *)
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f1 r)
                             (ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Char] f1 r) ->
                           ks a2)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Char]>_R)) } }
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: [GHC.Types.Char]) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1>_R))) -}
2e8ff595e659fce08afea2ca548d5474
  $w$dGToBSON ::
    GHC.Generics.M1
      GHC.Generics.S
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "filename")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
      (GHC.Generics.Rec0 GHC.Base.String)
      a1
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "username")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String)
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "filename")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.Base.String)
                            a1)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "username")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             a1) ->
                 GHC.Base.++
                   @ Data.Bson.Field
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              LockAPI.$fToBSONLockRequest4 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.String
                            (case GHC.Magic.runRW#
                                    @ 'GHC.Types.PtrRepLifted
                                    @ Data.Text.Internal.Text
                                    (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                     case GHC.Prim.newByteArray#
                                            @ GHC.Prim.RealWorld
                                            8#
                                            s1 of ds2 { (#,#) ipv7 ipv8 ->
                                     Data.Bson.$wouter
                                       (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv8)
                                       Data.Bson.$fValChar2
                                       ww
                                         `cast`
                                       (Trans
                                            (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "filename")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R [GHC.Types.Char]>_R <a1>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))
                                       0#
                                       ipv7 }) of ds2 { (#,#) ipv7 ipv8 ->
                             ipv8 })) } })
                      (GHC.Types.[] @ Data.Bson.Field))
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              LockAPI.$fToBSONLockRequest3 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.String
                            (case GHC.Magic.runRW#
                                    @ 'GHC.Types.PtrRepLifted
                                    @ Data.Text.Internal.Text
                                    (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                     case GHC.Prim.newByteArray#
                                            @ GHC.Prim.RealWorld
                                            8#
                                            s1 of ds2 { (#,#) ipv7 ipv8 ->
                                     Data.Bson.$wouter
                                       (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv8)
                                       Data.Bson.$fValChar2
                                       ww1
                                         `cast`
                                       (Trans
                                            (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "username")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R [GHC.Types.Char]>_R <a1>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))
                                       0#
                                       ipv7 }) of ds2 { (#,#) ipv7 ipv8 ->
                             ipv8 })) } })
                      (GHC.Types.[] @ Data.Bson.Field))) -}
ee35652b209f56693019c5a022266989
  $w$dGToBSON1 ::
    GHC.Prim.Int#
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               ":"
               ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
               'GHC.Types.False)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Types.Char)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [GHC.Types.Char])))
         a1
    -> Data.Bson.Document
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Prim.Int#)
                   (w :: (GHC.Generics.:+:)
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1)
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 ":"
                                 ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                                 'GHC.Types.False)
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Types.Char)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 [GHC.Types.Char])))
                           a1) ->
                 case w of wild {
                   GHC.Generics.L1 x
                   -> Data.Bson.Generic.$w$cgenericToBSON1
                        @ GHC.Generics.U1
                        @ ('GHC.Generics.MetaCons
                             "[]" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        Data.Bson.Generic.$fGToBSONU1_$cgenericToBSON
                          `cast`
                        (Sym (Data.Bson.Generic.N:GToBSON[0] <GHC.Generics.U1>_N))
                        LockAPI.$fToBSON[]_$s$fConstructorMetaMetaCons1
                        @ a1
                        ww
                        x
                   GHC.Generics.R1 x
                   -> Data.Bson.Generic.$w$cgenericToBSON1
                        @ (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Char)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 'GHC.Base.Nothing
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 [GHC.Types.Char]))
                        @ ('GHC.Generics.MetaCons
                             ":"
                             ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                             'GHC.Types.False)
                        LockAPI.$fToBSON[]8
                          `cast`
                        (Sym (Data.Bson.Generic.N:GToBSON[0]
                                  <GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        'GHC.Base.Nothing
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Char)
                                   GHC.Generics.:*: GHC.Generics.M1
                                                      GHC.Generics.S
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 [GHC.Types.Char])>_N))
                        LockAPI.$fToBSON[]_$s$fConstructorMetaMetaCons
                        @ a1
                        ww
                        x }) -}
c155db1de93fe1dd32f0ebf8a0e670ca
  $w$dGToBSON2 ::
    GHC.Generics.M1
      GHC.Generics.S
      ('GHC.Generics.MetaSel
         'GHC.Base.Nothing
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
      (GHC.Generics.Rec0 GHC.Types.Char)
      a1
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            'GHC.Base.Nothing
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 [GHC.Types.Char])
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               'GHC.Base.Nothing
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.Types.Char)
                            a1)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [GHC.Types.Char])
                             a1) ->
                 GHC.Base.++
                   @ Data.Bson.Field
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              LockAPI.$fToBSON[]9 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.String
                            (Data.Text.Show.singleton_
                               ww
                                 `cast`
                               (Trans
                                    (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            'GHC.Base.Nothing
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1 GHC.Generics.R GHC.Types.Char>_R <a1>_N)
                                    (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Types.Char>_R <a1>_P)))) } })
                      (GHC.Types.[] @ Data.Bson.Field))
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              LockAPI.$fToBSON[]9 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.String
                            (case GHC.Magic.runRW#
                                    @ 'GHC.Types.PtrRepLifted
                                    @ Data.Text.Internal.Text
                                    (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                     case GHC.Prim.newByteArray#
                                            @ GHC.Prim.RealWorld
                                            8#
                                            s1 of ds2 { (#,#) ipv7 ipv8 ->
                                     Data.Bson.$wouter
                                       (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv8)
                                       Data.Bson.$fValChar2
                                       ww1
                                         `cast`
                                       (Trans
                                            (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R [GHC.Types.Char]>_R <a1>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))
                                       0#
                                       ipv7 }) of ds2 { (#,#) ipv7 ipv8 ->
                             ipv8 })) } })
                      (GHC.Types.[] @ Data.Bson.Field))) -}
155a683da331754ed665f98c882b1c71
  $w$dGToJSON ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         LockAPI.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           LockAPI.$fToJSONLock4
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt #) } }) -}
e0e08da2f99125ebbbf5e137045bd748
  $w$dGToJSON1 ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         LockAPI.$wouter1
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           LockAPI.$fToJSONLock4
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt #) } }) -}
a9b6f6fcc2c57f0bbd22db011ed0ed77
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
7d7d8aba10eeb0fe10681a7c758ed768
  $wouter1 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
34e83fe81a9ee2ba5f6540ef06a47a95
  type API =
    ("requestLock"
     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] LockAPI.LockRequest
                         Servant.API.Sub.:> Servant.API.Verbs.Get
                                              '[Servant.API.ContentTypes.JSON]
                                              (GHC.Base.Maybe LockAPI.Lock)))
    Servant.API.Alternative.:<|> ("releaseLock"
                                  Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                        '[Servant.API.ContentTypes.JSON]
                                                        LockAPI.Lock
                                                      Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                           '[Servant.API.ContentTypes.JSON]
                                                                           GHC.Types.Bool))
c165c86568daee379f1d6bc767af773f
  data Lock
    = Lock {fileID :: GHC.Base.String, user :: GHC.Base.String}
59af277d867951fd43fdccbad0972355
  data LockRequest
    = LockRequest {filename :: GHC.Base.String,
                   username :: GHC.Base.String}
c165c86568daee379f1d6bc767af773f
  axiom Rep_Lock::
      GHC.Generics.Rep LockAPI.Lock
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Lock"
               "LockAPI"
               "use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Lock" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "fileID")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "user")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
59af277d867951fd43fdccbad0972355
  axiom Rep_LockRequest::
      GHC.Generics.Rep LockAPI.LockRequest
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "LockRequest"
               "LockAPI"
               "use-haskell-api-0.1.0.0-3nD5NWCHf1N83LkkK3wDn9"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "LockRequest" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "filename")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "username")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
e04680e53b72fda8890b6e93a80a5a28
  fileID :: LockAPI.Lock -> GHC.Base.String
  RecSel Left LockAPI.Lock
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LockAPI.Lock) ->
                 case ds of wild { LockAPI.Lock ds1 ds2 -> ds1 }) -}
f44f833b87af85f61d15fc471cb2a74a
  filename :: LockAPI.LockRequest -> GHC.Base.String
  RecSel Left LockAPI.LockRequest
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LockAPI.LockRequest) ->
                 case ds of wild { LockAPI.LockRequest ds1 ds2 -> ds1 }) -}
567129d13ca367baf6402829dffd05da
  user :: LockAPI.Lock -> GHC.Base.String
  RecSel Left LockAPI.Lock
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LockAPI.Lock) ->
                 case ds of wild { LockAPI.Lock ds1 ds2 -> ds2 }) -}
5513f140627fd074f9acd3c43383cd9a
  username :: LockAPI.LockRequest -> GHC.Base.String
  RecSel Left LockAPI.LockRequest
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LockAPI.LockRequest) ->
                 case ds of wild { LockAPI.LockRequest ds1 ds2 -> ds2 }) -}
instance GHC.Classes.Eq [LockAPI.Lock] = LockAPI.$fEqLock
instance GHC.Classes.Eq [LockAPI.LockRequest]
  = LockAPI.$fEqLockRequest
instance Data.Bson.Generic.FromBSON [LockAPI.Lock]
  = LockAPI.$fFromBSONLock
instance Data.Bson.Generic.FromBSON [LockAPI.LockRequest]
  = LockAPI.$fFromBSONLockRequest
instance Data.Bson.Generic.FromBSON [[]] = LockAPI.$fFromBSON[]
instance Data.Aeson.Types.Class.FromJSON [LockAPI.Lock]
  = LockAPI.$fFromJSONLock
instance Data.Aeson.Types.Class.FromJSON [LockAPI.LockRequest]
  = LockAPI.$fFromJSONLockRequest
instance GHC.Generics.Generic [LockAPI.Lock]
  = LockAPI.$fGenericLock
instance GHC.Generics.Generic [LockAPI.LockRequest]
  = LockAPI.$fGenericLockRequest
instance GHC.Read.Read [LockAPI.Lock] = LockAPI.$fReadLock
instance GHC.Read.Read [LockAPI.LockRequest]
  = LockAPI.$fReadLockRequest
instance GHC.Show.Show [LockAPI.Lock] = LockAPI.$fShowLock
instance GHC.Show.Show [LockAPI.LockRequest]
  = LockAPI.$fShowLockRequest
instance Data.Bson.Generic.ToBSON [LockAPI.LockRequest]
  = LockAPI.$fToBSONLockRequest
instance Data.Bson.Generic.ToBSON [[]] = LockAPI.$fToBSON[]
instance Data.Aeson.Types.Class.ToJSON [LockAPI.Lock]
  = LockAPI.$fToJSONLock
instance Data.Aeson.Types.Class.ToJSON [LockAPI.LockRequest]
  = LockAPI.$fToJSONLockRequest
family instance GHC.Generics.Rep [LockAPI.Lock] = LockAPI.Rep_Lock
family instance GHC.Generics.Rep [LockAPI.LockRequest]
  = LockAPI.Rep_LockRequest
"SPEC/LockAPI $dmtoBSON @ [Char]" [ALWAYS] forall ($dToBSON :: Data.Bson.Generic.ToBSON
                                                                 [GHC.Types.Char])
                                                  ($dGeneric :: GHC.Generics.Generic
                                                                  [GHC.Types.Char])
                                                  ($dGConstructorCount :: Data.Bson.Generic.GConstructorCount
                                                                            (GHC.Generics.Rep
                                                                               [GHC.Types.Char]))
                                                  ($dGToBSON :: Data.Bson.Generic.GToBSON
                                                                  (GHC.Generics.Rep
                                                                     [GHC.Types.Char]))
  Data.Bson.Generic.$dmtoBSON @ [GHC.Types.Char]
                              $dToBSON
                              $dGeneric
                              $dGConstructorCount
                              $dGToBSON
  = LockAPI.$fToBSON[]_$s$dmtoBSON
"SPEC/LockAPI $fConstructorMetaMetaCons @ ":" @ ('InfixI
                                                  'LeftAssociative 9) @ 'False" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                                                                             ":")
                                                                                                                                                         ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                       ('GHC.Generics.InfixI
                                                                                                                                                                          'GHC.Generics.LeftAssociative
                                                                                                                                                                          9))
                                                                                                                                                         ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                        'GHC.Types.False)
  GHC.Generics.$fConstructorMetaMetaCons @ ":"
                                         @ ('GHC.Generics.InfixI 'GHC.Generics.LeftAssociative 9)
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = LockAPI.$fToBSON[]_$s$fConstructorMetaMetaCons
"SPEC/LockAPI $fConstructorMetaMetaCons @ "LockRequest" @ 'PrefixI @ 'True" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                "LockRequest")
                                                                                            ($dSingI :: GHC.Generics.SingI
                                                                                                          'GHC.Generics.PrefixI)
                                                                                            ($dSingI1 :: GHC.Generics.SingI
                                                                                                           'GHC.Types.True)
  GHC.Generics.$fConstructorMetaMetaCons @ "LockRequest"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.True
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = LockAPI.$fToBSONLockRequest_$s$fConstructorMetaMetaCons
"SPEC/LockAPI $fConstructorMetaMetaCons @ "[]" @ 'PrefixI @ 'False" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                        "[]")
                                                                                    ($dSingI :: GHC.Generics.SingI
                                                                                                  'GHC.Generics.PrefixI)
                                                                                    ($dSingI1 :: GHC.Generics.SingI
                                                                                                   'GHC.Types.False)
  GHC.Generics.$fConstructorMetaMetaCons @ "[]"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = LockAPI.$fToBSON[]_$s$fConstructorMetaMetaCons1
"SPEC/LockAPI $fSelectorMetaMetaSel @ 'Nothing @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                           'GHC.Base.Nothing)
                                                                                                                             ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                            'GHC.Generics.NoSourceUnpackedness)
                                                                                                                             ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                            'GHC.Generics.NoSourceStrictness)
                                                                                                                             ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                            'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ 'GHC.Base.Nothing
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = LockAPI.$fFromBSON[]_$s$fSelectorMetaMetaSel
"SPEC/LockAPI $fSelectorMetaMetaSel @ ('Just
                                        "fileID") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                              "fileID"))
                                                                                                                                                                             ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                             ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                             ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "fileID")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = LockAPI.$fFromBSONLock_$s$fSelectorMetaMetaSel1
"SPEC/LockAPI $fSelectorMetaMetaSel @ ('Just
                                        "filename") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                "filename"))
                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                               ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "filename")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = LockAPI.$fFromBSONLockRequest_$s$fSelectorMetaMetaSel1
"SPEC/LockAPI $fSelectorMetaMetaSel @ ('Just
                                        "user") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                            "user"))
                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "user")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = LockAPI.$fFromBSONLock_$s$fSelectorMetaMetaSel
"SPEC/LockAPI $fSelectorMetaMetaSel @ ('Just
                                        "username") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                "username"))
                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                               ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "username")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = LockAPI.$fFromBSONLockRequest_$s$fSelectorMetaMetaSel
"SPEC/LockAPI $fSelectorMetaMetaSel_$cselName @ 'Nothing @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                     'GHC.Base.Nothing)
                                                                                                                                       ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                       ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                      'GHC.Generics.NoSourceStrictness)
                                                                                                                                       ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                      'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ 'GHC.Base.Nothing
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = LockAPI.$fFromBSON[]_$s$fSelectorMetaMetaSel_$cselName
"SPEC/LockAPI $fSelectorMetaMetaSel_$cselName @ ('Just
                                                  "fileID") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "fileID"))
                                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                 ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "fileID")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = LockAPI.$fFromBSONLock_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/LockAPI $fSelectorMetaMetaSel_$cselName @ ('Just
                                                  "filename") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                    "filename"))
                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                   ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "filename")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = LockAPI.$fFromBSONLockRequest_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/LockAPI $fSelectorMetaMetaSel_$cselName @ ('Just
                                                  "user") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "user"))
                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                               ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "user")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = LockAPI.$fFromBSONLock_$s$fSelectorMetaMetaSel_$cselName
"SPEC/LockAPI $fSelectorMetaMetaSel_$cselName @ ('Just
                                                  "username") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                    "username"))
                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                   ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "username")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = LockAPI.$fFromBSONLockRequest_$s$fSelectorMetaMetaSel_$cselName
"SPEC/LockAPI constructorCount @ [Char]" [ALWAYS] forall ($dGeneric :: GHC.Generics.Generic
                                                                         [GHC.Types.Char])
                                                         ($dGConstructorCount :: Data.Bson.Generic.GConstructorCount
                                                                                   (GHC.Generics.Rep
                                                                                      [GHC.Types.Char]))
  Data.Bson.Generic.constructorCount @ [GHC.Types.Char]
                                     $dGeneric
                                     $dGConstructorCount
  = LockAPI.$fToBSON[]_$sconstructorCount
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

